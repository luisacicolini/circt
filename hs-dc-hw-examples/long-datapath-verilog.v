// Generated by CIRCT unknown git version
module ops(	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:3
     input  [31:0]         arg0,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:21
     input                 arg0_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:37
     input  [31:0]         arg1,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:58
     input                 arg1_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:74
     input  [31:0]         arg2,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:95
     input                 arg2_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:111
     input  [31:0]         arg3,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:132
     input                 arg3_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:148
     input  [31:0]         arg4,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:169
     input                 arg4_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:185
     input  [31:0]         clk,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:206
     input                 clk_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:221
     input  [31:0]         rst,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:241
     input                 rst_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:256
                           clk_0,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:276
                           rst_0,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:292
                           out0_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:308
                           out1_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:329
                           out2_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:350
     output                arg0_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:372
                           arg1_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:393
                           arg2_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:414
                           arg3_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:435
                           arg4_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:456
                           clk_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:477
                           rst_ready,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:497
     output [31:0]         out0,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:517
     output                out0_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:533
     output [31:0]         out1,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:554
     output                out1_valid,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:570
  // output /*Zero Width*/ out2,	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:591
     output                out2_valid	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:2:606
);

  wire        allDone;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:352:12
  wire        done2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:351:12
  wire        _GEN;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:349:12
  wire        done1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:338:12
  wire        done0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:325:12
  wire [31:0] _GEN_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:309:12
  wire        _GEN_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:308:12
  wire        allDone_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:304:12
  wire        done1_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:303:12
  wire        done0_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:290:12
  wire        _GEN_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:274:12
  wire        allDone_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:272:12
  wire        done1_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:271:12
  wire        done0_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:258:12
  wire        _GEN_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:242:12
  wire        allDone_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:240:12
  wire        done2_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:239:12
  wire        done1_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:226:12
  wire        done0_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:213:12
  wire        _GEN_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:197:12
  wire        allDone_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:195:12
  wire        done1_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:194:12
  wire        done0_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:181:12
  wire        _GEN_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:165:11
  wire        allDone_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:162:11
  wire        done1_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:161:11
  wire        done0_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:148:11
  wire        _GEN_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:132:11
  wire        allDone_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:129:11
  wire        done1_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:128:11
  wire        done0_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:115:11
  wire        _GEN_7;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:99:11
  wire        allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:96:11
  wire        done4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:95:11
  wire        done3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:82:11
  wire        done2_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:69:11
  wire        done1_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:56:11
  wire        done0_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:43:11
  wire        _GEN_8;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:24:11
  wire        _GEN_9 = arg0_valid | arg1_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:5:10
  wire        _GEN_10 = _GEN_9 & _GEN_7;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:5:10, :7:10, :99:11
  wire        _GEN_11 = arg2_valid | arg3_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:13:10
  wire        _GEN_12 = _GEN_11 & _GEN_8;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:13:10, :15:10, :24:11
  wire        _GEN_13 = _GEN_11 | arg4_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:13:10, :21:11
  wire        _GEN_14 = _GEN_13 & allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:21:11, :23:11, :96:11
  assign _GEN_8 = _GEN_14 & _GEN_11;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:13:10, :23:11, :24:11
  wire [31:0] _GEN_15 = ~_GEN_11 ? (~arg2_valid ? arg2 : arg3) : arg4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:13:10, :19:11, :20:11, :27:11, :28:11
  reg         emitted_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:33:18
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:35:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:35:5
      emitted_0 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:29:14, :38:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:35:5
      emitted_0 <= done0_6 & ~allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:31:11, :32:11, :36:7, :43:11, :96:11
  end // always_ff @(posedge)
  wire        _GEN_16 = ~emitted_0 & _GEN_13;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:21:11, :34:11, :40:11, :41:11
  assign done0_6 = _GEN_1 & _GEN_16 | emitted_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:34:11, :41:11, :42:11, :43:11, :308:12
  reg         emitted_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:46:18
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:48:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:48:5
      emitted_1 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:29:14, :51:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:48:5
      emitted_1 <= done1_6 & ~allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:44:11, :45:11, :49:7, :56:11, :96:11
  end // always_ff @(posedge)
  wire        _GEN_17 = ~emitted_1 & _GEN_13;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:21:11, :47:11, :53:11, :54:11
  assign done1_6 = _GEN_4 & _GEN_17 | emitted_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:47:11, :54:11, :55:11, :56:11, :197:12
  reg         emitted_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:59:18
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:61:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:61:5
      emitted_2 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:29:14, :64:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:61:5
      emitted_2 <= done2_1 & ~allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:57:11, :58:11, :62:7, :69:11, :96:11
  end // always_ff @(posedge)
  wire        _GEN_18 = ~emitted_2 & _GEN_13;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:21:11, :60:11, :66:11, :67:11
  assign done2_1 = _GEN_5 & _GEN_18 | emitted_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:60:11, :67:11, :68:11, :69:11, :165:11
  reg         emitted_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:72:18
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:74:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:74:5
      emitted_3 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:29:14, :77:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:74:5
      emitted_3 <= done3 & ~allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:70:11, :71:11, :75:7, :82:11, :96:11
  end // always_ff @(posedge)
  wire        _GEN_19 = ~emitted_3 & _GEN_13;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:21:11, :73:11, :79:11, :80:11
  assign done3 = _GEN_7 & _GEN_19 | emitted_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:73:11, :80:11, :81:11, :82:11, :99:11
  reg         emitted_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:85:18
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:87:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:87:5
      emitted_4 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:29:14, :90:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:87:5
      emitted_4 <= done4 & ~allDone_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:83:11, :84:11, :88:7, :95:11, :96:11
  end // always_ff @(posedge)
  wire        _GEN_20 = ~emitted_4 & _GEN_13;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:21:11, :86:11, :92:11, :93:11
  assign done4 = _GEN_7 & _GEN_20 | emitted_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:86:11, :93:11, :94:11, :95:11, :99:11
  assign allDone_6 = done0_6 & done1_6 & done2_1 & done3 & done4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:43:11, :56:11, :69:11, :82:11, :95:11, :96:11
  wire        _GEN_21 = _GEN_19 & _GEN_9 & _GEN_20;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:5:10, :80:11, :93:11, :98:11
  assign _GEN_7 = allDone_5 & _GEN_21;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:98:11, :99:11, :129:11
  wire [31:0] _GEN_22 = _GEN_15 - ((~arg0_valid ? arg0 : arg1) - _GEN_15);	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:11:10, :12:10, :28:11, :97:11, :100:11
  reg         emitted_0_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:105:20
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:107:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:107:5
      emitted_0_0 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:101:16, :110:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:107:5
      emitted_0_0 <= done0_5 & ~allDone_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:103:11, :104:11, :108:7, :115:11, :129:11
  end // always_ff @(posedge)
  wire        _GEN_23 = ~emitted_0_0 & _GEN_21;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:98:11, :106:11, :112:11, :113:11
  assign done0_5 = _GEN_6 & _GEN_23 | emitted_0_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:106:11, :113:11, :114:11, :115:11, :132:11
  reg         emitted_1_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:118:20
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:120:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:120:5
      emitted_1_0 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:101:16, :123:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:120:5
      emitted_1_0 <= done1_5 & ~allDone_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:116:11, :117:11, :121:7, :128:11, :129:11
  end // always_ff @(posedge)
  wire        _GEN_24 = ~emitted_1_0 & _GEN_21;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:98:11, :119:11, :125:11, :126:11
  assign done1_5 = _GEN_6 & _GEN_24 | emitted_1_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:119:11, :126:11, :127:11, :128:11, :132:11
  assign allDone_5 = done0_5 & done1_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:115:11, :128:11, :129:11
  wire        _GEN_25 = _GEN_23 & _GEN & _GEN_24;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:113:11, :126:11, :131:11, :349:12
  assign _GEN_6 = allDone_4 & _GEN_25;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:131:11, :132:11, :162:11
  wire [31:0] _GEN_26 = $signed($signed(_GEN_0 * _GEN_22) / $signed(_GEN_22));	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:100:11, :130:11, :133:11, :309:12
  reg         emitted_0_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:138:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:140:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:140:5
      emitted_0_1 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:134:16, :143:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:140:5
      emitted_0_1 <= done0_4 & ~allDone_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:136:11, :137:11, :141:7, :148:11, :162:11
  end // always_ff @(posedge)
  wire        _GEN_27 = ~emitted_0_1 & _GEN_25;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:131:11, :139:11, :145:11, :146:11
  assign done0_4 = _GEN_5 & _GEN_27 | emitted_0_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:139:11, :146:11, :147:11, :148:11, :165:11
  reg         emitted_1_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:151:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:153:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:153:5
      emitted_1_1 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:134:16, :156:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:153:5
      emitted_1_1 <= done1_4 & ~allDone_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:149:11, :150:11, :154:7, :161:11, :162:11
  end // always_ff @(posedge)
  wire        _GEN_28 = ~emitted_1_1 & _GEN_25;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:131:11, :152:11, :158:11, :159:11
  assign done1_4 = _GEN_5 & _GEN_28 | emitted_1_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:152:11, :159:11, :160:11, :161:11, :165:11
  assign allDone_4 = done0_4 & done1_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:148:11, :161:11, :162:11
  wire        _GEN_29 = _GEN_27 & _GEN_18 & _GEN_28;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:67:11, :146:11, :159:11, :164:11
  assign _GEN_5 = allDone_3 & _GEN_29;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:164:11, :165:11, :195:12
  wire [31:0] _GEN_30 = $signed($signed(_GEN_15 / _GEN_26) / $signed(_GEN_26));	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:28:11, :133:11, :163:11, :166:11
  reg         emitted_0_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:171:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:173:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:173:5
      emitted_0_2 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:167:17, :176:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:173:5
      emitted_0_2 <= done0_3 & ~allDone_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:169:11, :170:12, :174:7, :181:12, :195:12
  end // always_ff @(posedge)
  wire        _GEN_31 = ~emitted_0_2 & _GEN_29;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:164:11, :172:12, :178:12, :179:12
  assign done0_3 = _GEN_3 & _GEN_31 | emitted_0_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:172:12, :179:12, :180:12, :181:12, :242:12
  reg         emitted_1_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:184:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:186:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:186:5
      emitted_1_2 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:167:17, :189:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:186:5
      emitted_1_2 <= done1_3 & ~allDone_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:182:12, :183:12, :187:7, :194:12, :195:12
  end // always_ff @(posedge)
  wire        _GEN_32 = ~emitted_1_2 & _GEN_29;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:164:11, :185:12, :191:12, :192:12
  assign done1_3 = _GEN_4 & _GEN_32 | emitted_1_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:185:12, :192:12, :193:12, :194:12, :197:12
  assign allDone_3 = done0_3 & done1_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:181:12, :194:12, :195:12
  wire        _GEN_33 = _GEN_17 & _GEN_32;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:54:11, :192:12, :196:12
  assign _GEN_4 = allDone_2 & _GEN_33;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:196:12, :197:12, :240:12
  wire [31:0] _GEN_34 = _GEN_15 / _GEN_30;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:28:11, :166:11, :198:12
  reg         emitted_0_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:203:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:205:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:205:5
      emitted_0_3 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:199:17, :208:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:205:5
      emitted_0_3 <= done0_2 & ~allDone_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:201:12, :202:12, :206:7, :213:12, :240:12
  end // always_ff @(posedge)
  wire        _GEN_35 = ~emitted_0_3 & _GEN_33;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:196:12, :204:12, :210:12, :211:12
  assign done0_2 = out1_ready & _GEN_35 | emitted_0_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:204:12, :211:12, :212:12, :213:12
  reg         emitted_1_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:216:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:218:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:218:5
      emitted_1_3 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:199:17, :221:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:218:5
      emitted_1_3 <= done1_2 & ~allDone_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:214:12, :215:12, :219:7, :226:12, :240:12
  end // always_ff @(posedge)
  wire        _GEN_36 = ~emitted_1_3 & _GEN_33;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:196:12, :217:12, :223:12, :224:12
  assign done1_2 = _GEN_2 & _GEN_36 | emitted_1_3;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:217:12, :224:12, :225:12, :226:12, :274:12
  reg         emitted_2_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:229:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:231:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:231:5
      emitted_2_0 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:199:17, :234:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:231:5
      emitted_2_0 <= done2_0 & ~allDone_2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:227:12, :228:12, :232:7, :239:12, :240:12
  end // always_ff @(posedge)
  wire        _GEN_37 = ~emitted_2_0 & _GEN_33;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:196:12, :230:12, :236:12, :237:12
  assign done2_0 = _GEN_3 & _GEN_37 | emitted_2_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:230:12, :237:12, :238:12, :239:12, :242:12
  assign allDone_2 = done0_2 & done1_2 & done2_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:213:12, :226:12, :239:12, :240:12
  wire        _GEN_38 = _GEN_31 & _GEN_37;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:179:12, :237:12, :241:12
  assign _GEN_3 = allDone_1 & _GEN_38;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:241:12, :242:12, :272:12
  wire [31:0] _GEN_39 = _GEN_30 * _GEN_34;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:166:11, :198:12, :243:12
  reg         emitted_0_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:248:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:250:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:250:5
      emitted_0_4 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:244:17, :253:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:250:5
      emitted_0_4 <= done0_1 & ~allDone_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:246:12, :247:12, :251:7, :258:12, :272:12
  end // always_ff @(posedge)
  wire        _GEN_40 = ~emitted_0_4 & _GEN_38;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:241:12, :249:12, :255:12, :256:12
  assign done0_1 = _GEN_1 & _GEN_40 | emitted_0_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:249:12, :256:12, :257:12, :258:12, :308:12
  reg         emitted_1_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:261:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:263:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:263:5
      emitted_1_4 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:244:17, :266:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:263:5
      emitted_1_4 <= done1_1 & ~allDone_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:259:12, :260:12, :264:7, :271:12, :272:12
  end // always_ff @(posedge)
  wire        _GEN_41 = ~emitted_1_4 & _GEN_38;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:241:12, :262:12, :268:12, :269:12
  assign done1_1 = _GEN_2 & _GEN_41 | emitted_1_4;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:262:12, :269:12, :270:12, :271:12, :274:12
  assign allDone_1 = done0_1 & done1_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:258:12, :271:12, :272:12
  wire        _GEN_42 = _GEN_36 & _GEN_41;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:224:12, :269:12, :273:12
  assign _GEN_2 = allDone_0 & _GEN_42;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:273:12, :274:12, :304:12
  wire [31:0] _GEN_43 = $signed($signed(_GEN_34) / $signed(_GEN_39));	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:198:12, :243:12, :275:12
  reg         emitted_0_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:280:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:282:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:282:5
      emitted_0_5 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:276:17, :285:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:282:5
      emitted_0_5 <= done0_0 & ~allDone_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:278:12, :279:12, :283:7, :290:12, :304:12
  end // always_ff @(posedge)
  wire        _GEN_44 = ~emitted_0_5 & _GEN_42;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:273:12, :281:12, :287:12, :288:12
  assign done0_0 = _GEN_1 & _GEN_44 | emitted_0_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:281:12, :288:12, :289:12, :290:12, :308:12
  reg         emitted_1_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:293:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:295:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:295:5
      emitted_1_5 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:276:17, :298:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:295:5
      emitted_1_5 <= done1_0 & ~allDone_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:291:12, :292:12, :296:7, :303:12, :304:12
  end // always_ff @(posedge)
  wire        _GEN_45 = ~emitted_1_5 & _GEN_42;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:273:12, :294:12, :300:12, :301:12
  assign done1_0 = _GEN_1 & _GEN_45 | emitted_1_5;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:294:12, :301:12, :302:12, :303:12, :308:12
  assign allDone_0 = done0_0 & done1_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:290:12, :303:12, :304:12
  wire        _GEN_46 = _GEN_40 & _GEN_45 & _GEN_16 & _GEN_44;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:41:11, :256:12, :288:12, :301:12, :307:12
  assign _GEN_1 = allDone & _GEN_46;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:307:12, :308:12, :352:12
  assign _GEN_0 = _GEN_39 & _GEN_43 ^ (_GEN_15 | _GEN_43);	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:28:11, :243:12, :275:12, :305:12, :306:12, :309:12
  reg         emitted_0_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:315:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:317:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:317:5
      emitted_0_6 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:311:17, :320:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:317:5
      emitted_0_6 <= done0 & ~allDone;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:313:12, :314:12, :318:7, :325:12, :352:12
  end // always_ff @(posedge)
  wire        _GEN_47 = ~emitted_0_6 & _GEN_46;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:307:12, :316:12, :322:12, :323:12
  assign done0 = out0_ready & _GEN_47 | emitted_0_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:316:12, :323:12, :324:12, :325:12
  reg         emitted_1_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:328:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:330:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:330:5
      emitted_1_6 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:311:17, :333:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:330:5
      emitted_1_6 <= done1 & ~allDone;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:326:12, :327:12, :331:7, :338:12, :352:12
  end // always_ff @(posedge)
  wire        _GEN_48 = ~emitted_1_6 & _GEN_46;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:307:12, :329:12, :335:12, :336:12
  assign done1 = out2_ready & _GEN_48 | emitted_1_6;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:329:12, :336:12, :337:12, :338:12
  reg         emitted_2_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:341:21
  always_ff @(posedge clk_0) begin	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:343:5
    if (rst_0)	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:343:5
      emitted_2_1 <= 1'h0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:311:17, :346:7
    else	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:343:5
      emitted_2_1 <= done2 & ~allDone;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:339:12, :340:12, :344:7, :351:12, :352:12
  end // always_ff @(posedge)
  assign _GEN = ~emitted_2_1 & _GEN_46;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:307:12, :342:12, :348:12, :349:12
  assign done2 = _GEN_6 & _GEN | emitted_2_1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:132:11, :342:12, :349:12, :350:12, :351:12
  assign allDone = done0 & done1 & done2;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:325:12, :338:12, :351:12, :352:12
  assign arg0_ready = _GEN_10 & arg0_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:7:10, :8:10, :353:5
  assign arg1_ready = _GEN_10 & ~arg0_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:7:10, :9:10, :10:10, :353:5
  assign arg2_ready = _GEN_12 & arg2_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:15:10, :16:10, :353:5
  assign arg3_ready = _GEN_12 & ~arg2_valid;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:15:10, :17:11, :18:11, :353:5
  assign arg4_ready = _GEN_14 & ~_GEN_11;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:13:10, :23:11, :25:11, :26:11, :353:5
  assign clk_ready = 1'h1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:4:15, :353:5
  assign rst_ready = 1'h1;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:3:13, :353:5
  assign out0 = _GEN_0;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:309:12, :353:5
  assign out0_valid = _GEN_47;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:323:12, :353:5
  assign out1 = _GEN_34;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:198:12, :353:5
  assign out1_valid = _GEN_35;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:211:12, :353:5
  // Zero width: assign out2 = /*Zero width*/;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:353:5
  assign out2_valid = _GEN_48;	// ../hs-dc-hw-examples/long-datapath-sv-seq-sv.mlir:336:12, :353:5
endmodule

module {
  hw.module @ops(in %arg0 : i32, in %arg0_valid : i1, in %arg1 : i32, in %arg1_valid : i1, in %arg2 : i32, in %arg2_valid : i1, in %arg3 : i32, in %arg3_valid : i1, in %arg4 : i32, in %arg4_valid : i1, in %clk : i32, in %clk_valid : i1, in %rst : i32, in %rst_valid : i1, in %clk_0 : i1, in %rst_0 : i1, in %out0_ready : i1, in %out1_ready : i1, in %out2_ready : i1, out arg0_ready : i1, out arg1_ready : i1, out arg2_ready : i1, out arg3_ready : i1, out arg4_ready : i1, out clk_ready : i1, out rst_ready : i1, out out0 : i32, out out0_valid : i1, out out1 : i32, out out1_valid : i1, out out2 : i0, out out2_valid : i1) {
    %allDone = sv.wire {hw.verilogName = "allDone"} : !hw.inout<i1>
    %done2 = sv.wire {hw.verilogName = "done2"} : !hw.inout<i1>
    %0 = sv.wire {hw.verilogName = "_GEN"} : !hw.inout<i1>
    %done1 = sv.wire {hw.verilogName = "done1"} : !hw.inout<i1>
    %done0 = sv.wire {hw.verilogName = "done0"} : !hw.inout<i1>
    %1 = sv.wire {hw.verilogName = "_GEN_0"} : !hw.inout<i32>
    %2 = sv.wire {hw.verilogName = "_GEN_1"} : !hw.inout<i1>
    %allDone_0 = sv.wire name "allDone" {hw.verilogName = "allDone_0"} : !hw.inout<i1>
    %done1_1 = sv.wire name "done1" {hw.verilogName = "done1_0"} : !hw.inout<i1>
    %done0_2 = sv.wire name "done0" {hw.verilogName = "done0_0"} : !hw.inout<i1>
    %3 = sv.wire {hw.verilogName = "_GEN_2"} : !hw.inout<i1>
    %allDone_3 = sv.wire name "allDone" {hw.verilogName = "allDone_1"} : !hw.inout<i1>
    %done1_4 = sv.wire name "done1" {hw.verilogName = "done1_1"} : !hw.inout<i1>
    %done0_5 = sv.wire name "done0" {hw.verilogName = "done0_1"} : !hw.inout<i1>
    %4 = sv.wire {hw.verilogName = "_GEN_3"} : !hw.inout<i1>
    %allDone_6 = sv.wire name "allDone" {hw.verilogName = "allDone_2"} : !hw.inout<i1>
    %done2_7 = sv.wire name "done2" {hw.verilogName = "done2_0"} : !hw.inout<i1>
    %done1_8 = sv.wire name "done1" {hw.verilogName = "done1_2"} : !hw.inout<i1>
    %done0_9 = sv.wire name "done0" {hw.verilogName = "done0_2"} : !hw.inout<i1>
    %5 = sv.wire {hw.verilogName = "_GEN_4"} : !hw.inout<i1>
    %allDone_10 = sv.wire name "allDone" {hw.verilogName = "allDone_3"} : !hw.inout<i1>
    %done1_11 = sv.wire name "done1" {hw.verilogName = "done1_3"} : !hw.inout<i1>
    %done0_12 = sv.wire name "done0" {hw.verilogName = "done0_3"} : !hw.inout<i1>
    %6 = sv.wire {hw.verilogName = "_GEN_5"} : !hw.inout<i1>
    %allDone_13 = sv.wire name "allDone" {hw.verilogName = "allDone_4"} : !hw.inout<i1>
    %done1_14 = sv.wire name "done1" {hw.verilogName = "done1_4"} : !hw.inout<i1>
    %done0_15 = sv.wire name "done0" {hw.verilogName = "done0_4"} : !hw.inout<i1>
    %7 = sv.wire {hw.verilogName = "_GEN_6"} : !hw.inout<i1>
    %allDone_16 = sv.wire name "allDone" {hw.verilogName = "allDone_5"} : !hw.inout<i1>
    %done1_17 = sv.wire name "done1" {hw.verilogName = "done1_5"} : !hw.inout<i1>
    %done0_18 = sv.wire name "done0" {hw.verilogName = "done0_5"} : !hw.inout<i1>
    %8 = sv.wire {hw.verilogName = "_GEN_7"} : !hw.inout<i1>
    %allDone_19 = sv.wire name "allDone" {hw.verilogName = "allDone_6"} : !hw.inout<i1>
    %done4 = sv.wire {hw.verilogName = "done4"} : !hw.inout<i1>
    %done3 = sv.wire {hw.verilogName = "done3"} : !hw.inout<i1>
    %done2_20 = sv.wire name "done2" {hw.verilogName = "done2_1"} : !hw.inout<i1>
    %done1_21 = sv.wire name "done1" {hw.verilogName = "done1_6"} : !hw.inout<i1>
    %done0_22 = sv.wire name "done0" {hw.verilogName = "done0_6"} : !hw.inout<i1>
    %9 = sv.wire {hw.verilogName = "_GEN_8"} : !hw.inout<i1>
    %true = hw.constant true
    %true_23 = hw.constant true
    %10 = comb.or %arg0_valid, %arg1_valid : i1
    %11 = sv.wire {hw.verilogName = "_GEN_9"} : !hw.inout<i1>
    sv.assign %11, %10 : i1
    %true_24 = hw.constant true
    %12 = sv.read_inout %11 : !hw.inout<i1>
    %13 = sv.read_inout %8 : !hw.inout<i1>
    %14 = comb.and %12, %13 : i1
    %15 = sv.wire {hw.verilogName = "_GEN_10"} : !hw.inout<i1>
    sv.assign %15, %14 : i1
    %16 = sv.read_inout %15 : !hw.inout<i1>
    %17 = comb.and %16, %arg0_valid : i1
    %18 = comb.xor %arg0_valid, %true_24 : i1
    %19 = sv.read_inout %15 : !hw.inout<i1>
    %20 = comb.and %19, %18 : i1
    %21 = comb.xor %arg0_valid, %true_24 : i1
    %22 = comb.mux %21, %arg0, %arg1 : i32
    %23 = comb.or %arg2_valid, %arg3_valid : i1
    %24 = sv.wire {hw.verilogName = "_GEN_11"} : !hw.inout<i1>
    sv.assign %24, %23 : i1
    %true_25 = hw.constant true
    %25 = sv.read_inout %24 : !hw.inout<i1>
    %26 = sv.read_inout %9 : !hw.inout<i1>
    %27 = comb.and %25, %26 : i1
    %28 = sv.wire {hw.verilogName = "_GEN_12"} : !hw.inout<i1>
    sv.assign %28, %27 : i1
    %29 = sv.read_inout %28 : !hw.inout<i1>
    %30 = comb.and %29, %arg2_valid : i1
    %31 = comb.xor %arg2_valid, %true_25 : i1
    %32 = sv.read_inout %28 : !hw.inout<i1>
    %33 = comb.and %32, %31 : i1
    %34 = comb.xor %arg2_valid, %true_25 : i1
    %35 = comb.mux %34, %arg2, %arg3 : i32
    %36 = sv.read_inout %24 : !hw.inout<i1>
    %37 = comb.or %36, %arg4_valid : i1
    %38 = sv.wire {hw.verilogName = "_GEN_13"} : !hw.inout<i1>
    sv.assign %38, %37 : i1
    %true_26 = hw.constant true
    %39 = sv.read_inout %38 : !hw.inout<i1>
    %40 = sv.read_inout %allDone_19 : !hw.inout<i1>
    %41 = comb.and %39, %40 : i1
    %42 = sv.wire {hw.verilogName = "_GEN_14"} : !hw.inout<i1>
    sv.assign %42, %41 : i1
    %43 = sv.read_inout %24 : !hw.inout<i1>
    %44 = sv.read_inout %42 : !hw.inout<i1>
    %45 = comb.and %44, %43 : i1
    sv.assign %9, %45 : i1
    %46 = sv.read_inout %24 : !hw.inout<i1>
    %47 = comb.xor %46, %true_26 : i1
    %48 = sv.read_inout %42 : !hw.inout<i1>
    %49 = comb.and %48, %47 : i1
    %50 = sv.read_inout %24 : !hw.inout<i1>
    %51 = comb.xor %50, %true_26 : i1
    %52 = comb.mux %51, %35, %arg4 : i32
    %53 = sv.wire {hw.verilogName = "_GEN_15"} : !hw.inout<i32>
    sv.assign %53, %52 : i32
    %false = hw.constant false
    %true_27 = hw.constant true
    %54 = sv.read_inout %allDone_19 : !hw.inout<i1>
    %55 = comb.xor %54, %true_27 : i1
    %56 = sv.read_inout %done0_22 : !hw.inout<i1>
    %57 = comb.and %56, %55 : i1
    %emitted_0 = sv.reg sym @emitted_0 {hw.verilogName = "emitted_0"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0, %57 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0, %false : i1
    }
    %58 = sv.read_inout %emitted_0 : !hw.inout<i1>
    %59 = comb.xor %58, %true_27 : i1
    %60 = sv.read_inout %38 : !hw.inout<i1>
    %61 = comb.and %59, %60 : i1
    %62 = sv.wire {hw.verilogName = "_GEN_16"} : !hw.inout<i1>
    sv.assign %62, %61 : i1
    %63 = sv.read_inout %62 : !hw.inout<i1>
    %64 = sv.read_inout %2 : !hw.inout<i1>
    %65 = comb.and %64, %63 : i1
    %66 = sv.read_inout %emitted_0 : !hw.inout<i1>
    %67 = comb.or %65, %66 : i1
    sv.assign %done0_22, %67 : i1
    %68 = sv.read_inout %allDone_19 : !hw.inout<i1>
    %69 = comb.xor %68, %true_27 : i1
    %70 = sv.read_inout %done1_21 : !hw.inout<i1>
    %71 = comb.and %70, %69 : i1
    %emitted_1 = sv.reg sym @emitted_1 {hw.verilogName = "emitted_1"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1, %71 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1, %false : i1
    }
    %72 = sv.read_inout %emitted_1 : !hw.inout<i1>
    %73 = comb.xor %72, %true_27 : i1
    %74 = sv.read_inout %38 : !hw.inout<i1>
    %75 = comb.and %73, %74 : i1
    %76 = sv.wire {hw.verilogName = "_GEN_17"} : !hw.inout<i1>
    sv.assign %76, %75 : i1
    %77 = sv.read_inout %76 : !hw.inout<i1>
    %78 = sv.read_inout %5 : !hw.inout<i1>
    %79 = comb.and %78, %77 : i1
    %80 = sv.read_inout %emitted_1 : !hw.inout<i1>
    %81 = comb.or %79, %80 : i1
    sv.assign %done1_21, %81 : i1
    %82 = sv.read_inout %allDone_19 : !hw.inout<i1>
    %83 = comb.xor %82, %true_27 : i1
    %84 = sv.read_inout %done2_20 : !hw.inout<i1>
    %85 = comb.and %84, %83 : i1
    %emitted_2 = sv.reg sym @emitted_2 {hw.verilogName = "emitted_2"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_2, %85 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_2, %false : i1
    }
    %86 = sv.read_inout %emitted_2 : !hw.inout<i1>
    %87 = comb.xor %86, %true_27 : i1
    %88 = sv.read_inout %38 : !hw.inout<i1>
    %89 = comb.and %87, %88 : i1
    %90 = sv.wire {hw.verilogName = "_GEN_18"} : !hw.inout<i1>
    sv.assign %90, %89 : i1
    %91 = sv.read_inout %90 : !hw.inout<i1>
    %92 = sv.read_inout %6 : !hw.inout<i1>
    %93 = comb.and %92, %91 : i1
    %94 = sv.read_inout %emitted_2 : !hw.inout<i1>
    %95 = comb.or %93, %94 : i1
    sv.assign %done2_20, %95 : i1
    %96 = sv.read_inout %allDone_19 : !hw.inout<i1>
    %97 = comb.xor %96, %true_27 : i1
    %98 = sv.read_inout %done3 : !hw.inout<i1>
    %99 = comb.and %98, %97 : i1
    %emitted_3 = sv.reg sym @emitted_3 {hw.verilogName = "emitted_3"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_3, %99 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_3, %false : i1
    }
    %100 = sv.read_inout %emitted_3 : !hw.inout<i1>
    %101 = comb.xor %100, %true_27 : i1
    %102 = sv.read_inout %38 : !hw.inout<i1>
    %103 = comb.and %101, %102 : i1
    %104 = sv.wire {hw.verilogName = "_GEN_19"} : !hw.inout<i1>
    sv.assign %104, %103 : i1
    %105 = sv.read_inout %104 : !hw.inout<i1>
    %106 = sv.read_inout %8 : !hw.inout<i1>
    %107 = comb.and %106, %105 : i1
    %108 = sv.read_inout %emitted_3 : !hw.inout<i1>
    %109 = comb.or %107, %108 : i1
    sv.assign %done3, %109 : i1
    %110 = sv.read_inout %allDone_19 : !hw.inout<i1>
    %111 = comb.xor %110, %true_27 : i1
    %112 = sv.read_inout %done4 : !hw.inout<i1>
    %113 = comb.and %112, %111 : i1
    %emitted_4 = sv.reg sym @emitted_4 {hw.verilogName = "emitted_4"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_4, %113 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_4, %false : i1
    }
    %114 = sv.read_inout %emitted_4 : !hw.inout<i1>
    %115 = comb.xor %114, %true_27 : i1
    %116 = sv.read_inout %38 : !hw.inout<i1>
    %117 = comb.and %115, %116 : i1
    %118 = sv.wire {hw.verilogName = "_GEN_20"} : !hw.inout<i1>
    sv.assign %118, %117 : i1
    %119 = sv.read_inout %118 : !hw.inout<i1>
    %120 = sv.read_inout %8 : !hw.inout<i1>
    %121 = comb.and %120, %119 : i1
    %122 = sv.read_inout %emitted_4 : !hw.inout<i1>
    %123 = comb.or %121, %122 : i1
    sv.assign %done4, %123 : i1
    %124 = sv.read_inout %done0_22 : !hw.inout<i1>
    %125 = sv.read_inout %done1_21 : !hw.inout<i1>
    %126 = sv.read_inout %done2_20 : !hw.inout<i1>
    %127 = sv.read_inout %done3 : !hw.inout<i1>
    %128 = sv.read_inout %done4 : !hw.inout<i1>
    %129 = comb.and %124, %125 : i1
    %130 = comb.and %127, %128 : i1
    %131 = comb.and %126, %130 : i1
    %132 = comb.and %129, %131 : i1
    sv.assign %allDone_19, %132 : i1
    %133 = sv.read_inout %53 : !hw.inout<i32>
    %134 = comb.sub %22, %133 : i32
    %135 = sv.read_inout %11 : !hw.inout<i1>
    %136 = sv.read_inout %104 : !hw.inout<i1>
    %137 = sv.read_inout %118 : !hw.inout<i1>
    %138 = comb.and %135, %137 : i1
    %139 = comb.and %136, %138 : i1
    %140 = sv.wire {hw.verilogName = "_GEN_21"} : !hw.inout<i1>
    sv.assign %140, %139 : i1
    %141 = sv.read_inout %140 : !hw.inout<i1>
    %142 = sv.read_inout %allDone_16 : !hw.inout<i1>
    %143 = comb.and %142, %141 : i1
    sv.assign %8, %143 : i1
    %144 = sv.read_inout %53 : !hw.inout<i32>
    %145 = comb.sub %144, %134 : i32
    %146 = sv.wire {hw.verilogName = "_GEN_22"} : !hw.inout<i32>
    sv.assign %146, %145 : i32
    %false_28 = hw.constant false
    %true_29 = hw.constant true
    %147 = sv.read_inout %allDone_16 : !hw.inout<i1>
    %148 = comb.xor %147, %true_29 : i1
    %149 = sv.read_inout %done0_18 : !hw.inout<i1>
    %150 = comb.and %149, %148 : i1
    %emitted_0_30 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_0"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_30, %150 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_30, %false_28 : i1
    }
    %151 = sv.read_inout %emitted_0_30 : !hw.inout<i1>
    %152 = comb.xor %151, %true_29 : i1
    %153 = sv.read_inout %140 : !hw.inout<i1>
    %154 = comb.and %152, %153 : i1
    %155 = sv.wire {hw.verilogName = "_GEN_23"} : !hw.inout<i1>
    sv.assign %155, %154 : i1
    %156 = sv.read_inout %155 : !hw.inout<i1>
    %157 = sv.read_inout %7 : !hw.inout<i1>
    %158 = comb.and %157, %156 : i1
    %159 = sv.read_inout %emitted_0_30 : !hw.inout<i1>
    %160 = comb.or %158, %159 : i1
    sv.assign %done0_18, %160 : i1
    %161 = sv.read_inout %allDone_16 : !hw.inout<i1>
    %162 = comb.xor %161, %true_29 : i1
    %163 = sv.read_inout %done1_17 : !hw.inout<i1>
    %164 = comb.and %163, %162 : i1
    %emitted_1_31 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_0"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_31, %164 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_31, %false_28 : i1
    }
    %165 = sv.read_inout %emitted_1_31 : !hw.inout<i1>
    %166 = comb.xor %165, %true_29 : i1
    %167 = sv.read_inout %140 : !hw.inout<i1>
    %168 = comb.and %166, %167 : i1
    %169 = sv.wire {hw.verilogName = "_GEN_24"} : !hw.inout<i1>
    sv.assign %169, %168 : i1
    %170 = sv.read_inout %169 : !hw.inout<i1>
    %171 = sv.read_inout %7 : !hw.inout<i1>
    %172 = comb.and %171, %170 : i1
    %173 = sv.read_inout %emitted_1_31 : !hw.inout<i1>
    %174 = comb.or %172, %173 : i1
    sv.assign %done1_17, %174 : i1
    %175 = sv.read_inout %done0_18 : !hw.inout<i1>
    %176 = sv.read_inout %done1_17 : !hw.inout<i1>
    %177 = comb.and %175, %176 : i1
    sv.assign %allDone_16, %177 : i1
    %178 = sv.read_inout %146 : !hw.inout<i32>
    %179 = sv.read_inout %1 : !hw.inout<i32>
    %180 = comb.mul %179, %178 : i32
    %181 = sv.read_inout %155 : !hw.inout<i1>
    %182 = sv.read_inout %169 : !hw.inout<i1>
    %183 = sv.read_inout %0 : !hw.inout<i1>
    %184 = comb.and %183, %182 : i1
    %185 = comb.and %181, %184 : i1
    %186 = sv.wire {hw.verilogName = "_GEN_25"} : !hw.inout<i1>
    sv.assign %186, %185 : i1
    %187 = sv.read_inout %186 : !hw.inout<i1>
    %188 = sv.read_inout %allDone_13 : !hw.inout<i1>
    %189 = comb.and %188, %187 : i1
    sv.assign %7, %189 : i1
    %190 = sv.read_inout %146 : !hw.inout<i32>
    %191 = comb.divs %180, %190 : i32
    %192 = sv.wire {hw.verilogName = "_GEN_26"} : !hw.inout<i32>
    sv.assign %192, %191 : i32
    %false_32 = hw.constant false
    %true_33 = hw.constant true
    %193 = sv.read_inout %allDone_13 : !hw.inout<i1>
    %194 = comb.xor %193, %true_33 : i1
    %195 = sv.read_inout %done0_15 : !hw.inout<i1>
    %196 = comb.and %195, %194 : i1
    %emitted_0_34 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_1"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_34, %196 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_34, %false_32 : i1
    }
    %197 = sv.read_inout %emitted_0_34 : !hw.inout<i1>
    %198 = comb.xor %197, %true_33 : i1
    %199 = sv.read_inout %186 : !hw.inout<i1>
    %200 = comb.and %198, %199 : i1
    %201 = sv.wire {hw.verilogName = "_GEN_27"} : !hw.inout<i1>
    sv.assign %201, %200 : i1
    %202 = sv.read_inout %201 : !hw.inout<i1>
    %203 = sv.read_inout %6 : !hw.inout<i1>
    %204 = comb.and %203, %202 : i1
    %205 = sv.read_inout %emitted_0_34 : !hw.inout<i1>
    %206 = comb.or %204, %205 : i1
    sv.assign %done0_15, %206 : i1
    %207 = sv.read_inout %allDone_13 : !hw.inout<i1>
    %208 = comb.xor %207, %true_33 : i1
    %209 = sv.read_inout %done1_14 : !hw.inout<i1>
    %210 = comb.and %209, %208 : i1
    %emitted_1_35 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_1"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_35, %210 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_35, %false_32 : i1
    }
    %211 = sv.read_inout %emitted_1_35 : !hw.inout<i1>
    %212 = comb.xor %211, %true_33 : i1
    %213 = sv.read_inout %186 : !hw.inout<i1>
    %214 = comb.and %212, %213 : i1
    %215 = sv.wire {hw.verilogName = "_GEN_28"} : !hw.inout<i1>
    sv.assign %215, %214 : i1
    %216 = sv.read_inout %215 : !hw.inout<i1>
    %217 = sv.read_inout %6 : !hw.inout<i1>
    %218 = comb.and %217, %216 : i1
    %219 = sv.read_inout %emitted_1_35 : !hw.inout<i1>
    %220 = comb.or %218, %219 : i1
    sv.assign %done1_14, %220 : i1
    %221 = sv.read_inout %done0_15 : !hw.inout<i1>
    %222 = sv.read_inout %done1_14 : !hw.inout<i1>
    %223 = comb.and %221, %222 : i1
    sv.assign %allDone_13, %223 : i1
    %224 = sv.read_inout %53 : !hw.inout<i32>
    %225 = sv.read_inout %192 : !hw.inout<i32>
    %226 = comb.divu %224, %225 : i32
    %227 = sv.read_inout %90 : !hw.inout<i1>
    %228 = sv.read_inout %201 : !hw.inout<i1>
    %229 = sv.read_inout %215 : !hw.inout<i1>
    %230 = comb.and %227, %229 : i1
    %231 = comb.and %228, %230 : i1
    %232 = sv.wire {hw.verilogName = "_GEN_29"} : !hw.inout<i1>
    sv.assign %232, %231 : i1
    %233 = sv.read_inout %232 : !hw.inout<i1>
    %234 = sv.read_inout %allDone_10 : !hw.inout<i1>
    %235 = comb.and %234, %233 : i1
    sv.assign %6, %235 : i1
    %236 = sv.read_inout %192 : !hw.inout<i32>
    %237 = comb.divs %226, %236 : i32
    %238 = sv.wire {hw.verilogName = "_GEN_30"} : !hw.inout<i32>
    sv.assign %238, %237 : i32
    %false_36 = hw.constant false
    %true_37 = hw.constant true
    %239 = sv.read_inout %allDone_10 : !hw.inout<i1>
    %240 = comb.xor %239, %true_37 : i1
    %241 = sv.read_inout %done0_12 : !hw.inout<i1>
    %242 = comb.and %241, %240 : i1
    %emitted_0_38 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_2"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_38, %242 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_38, %false_36 : i1
    }
    %243 = sv.read_inout %emitted_0_38 : !hw.inout<i1>
    %244 = comb.xor %243, %true_37 : i1
    %245 = sv.read_inout %232 : !hw.inout<i1>
    %246 = comb.and %244, %245 : i1
    %247 = sv.wire {hw.verilogName = "_GEN_31"} : !hw.inout<i1>
    sv.assign %247, %246 : i1
    %248 = sv.read_inout %247 : !hw.inout<i1>
    %249 = sv.read_inout %4 : !hw.inout<i1>
    %250 = comb.and %249, %248 : i1
    %251 = sv.read_inout %emitted_0_38 : !hw.inout<i1>
    %252 = comb.or %250, %251 : i1
    sv.assign %done0_12, %252 : i1
    %253 = sv.read_inout %allDone_10 : !hw.inout<i1>
    %254 = comb.xor %253, %true_37 : i1
    %255 = sv.read_inout %done1_11 : !hw.inout<i1>
    %256 = comb.and %255, %254 : i1
    %emitted_1_39 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_2"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_39, %256 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_39, %false_36 : i1
    }
    %257 = sv.read_inout %emitted_1_39 : !hw.inout<i1>
    %258 = comb.xor %257, %true_37 : i1
    %259 = sv.read_inout %232 : !hw.inout<i1>
    %260 = comb.and %258, %259 : i1
    %261 = sv.wire {hw.verilogName = "_GEN_32"} : !hw.inout<i1>
    sv.assign %261, %260 : i1
    %262 = sv.read_inout %261 : !hw.inout<i1>
    %263 = sv.read_inout %5 : !hw.inout<i1>
    %264 = comb.and %263, %262 : i1
    %265 = sv.read_inout %emitted_1_39 : !hw.inout<i1>
    %266 = comb.or %264, %265 : i1
    sv.assign %done1_11, %266 : i1
    %267 = sv.read_inout %done0_12 : !hw.inout<i1>
    %268 = sv.read_inout %done1_11 : !hw.inout<i1>
    %269 = comb.and %267, %268 : i1
    sv.assign %allDone_10, %269 : i1
    %270 = sv.read_inout %76 : !hw.inout<i1>
    %271 = sv.read_inout %261 : !hw.inout<i1>
    %272 = comb.and %270, %271 : i1
    %273 = sv.wire {hw.verilogName = "_GEN_33"} : !hw.inout<i1>
    sv.assign %273, %272 : i1
    %274 = sv.read_inout %273 : !hw.inout<i1>
    %275 = sv.read_inout %allDone_6 : !hw.inout<i1>
    %276 = comb.and %275, %274 : i1
    sv.assign %5, %276 : i1
    %277 = sv.read_inout %53 : !hw.inout<i32>
    %278 = sv.read_inout %238 : !hw.inout<i32>
    %279 = comb.divu %277, %278 : i32
    %280 = sv.wire {hw.verilogName = "_GEN_34"} : !hw.inout<i32>
    sv.assign %280, %279 : i32
    %false_40 = hw.constant false
    %true_41 = hw.constant true
    %281 = sv.read_inout %allDone_6 : !hw.inout<i1>
    %282 = comb.xor %281, %true_41 : i1
    %283 = sv.read_inout %done0_9 : !hw.inout<i1>
    %284 = comb.and %283, %282 : i1
    %emitted_0_42 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_3"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_42, %284 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_42, %false_40 : i1
    }
    %285 = sv.read_inout %emitted_0_42 : !hw.inout<i1>
    %286 = comb.xor %285, %true_41 : i1
    %287 = sv.read_inout %273 : !hw.inout<i1>
    %288 = comb.and %286, %287 : i1
    %289 = sv.wire {hw.verilogName = "_GEN_35"} : !hw.inout<i1>
    sv.assign %289, %288 : i1
    %290 = sv.read_inout %289 : !hw.inout<i1>
    %291 = comb.and %out1_ready, %290 : i1
    %292 = sv.read_inout %emitted_0_42 : !hw.inout<i1>
    %293 = comb.or %291, %292 : i1
    sv.assign %done0_9, %293 : i1
    %294 = sv.read_inout %allDone_6 : !hw.inout<i1>
    %295 = comb.xor %294, %true_41 : i1
    %296 = sv.read_inout %done1_8 : !hw.inout<i1>
    %297 = comb.and %296, %295 : i1
    %emitted_1_43 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_3"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_43, %297 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_43, %false_40 : i1
    }
    %298 = sv.read_inout %emitted_1_43 : !hw.inout<i1>
    %299 = comb.xor %298, %true_41 : i1
    %300 = sv.read_inout %273 : !hw.inout<i1>
    %301 = comb.and %299, %300 : i1
    %302 = sv.wire {hw.verilogName = "_GEN_36"} : !hw.inout<i1>
    sv.assign %302, %301 : i1
    %303 = sv.read_inout %302 : !hw.inout<i1>
    %304 = sv.read_inout %3 : !hw.inout<i1>
    %305 = comb.and %304, %303 : i1
    %306 = sv.read_inout %emitted_1_43 : !hw.inout<i1>
    %307 = comb.or %305, %306 : i1
    sv.assign %done1_8, %307 : i1
    %308 = sv.read_inout %allDone_6 : !hw.inout<i1>
    %309 = comb.xor %308, %true_41 : i1
    %310 = sv.read_inout %done2_7 : !hw.inout<i1>
    %311 = comb.and %310, %309 : i1
    %emitted_2_44 = sv.reg sym @emitted_2 name "emitted_2" {hw.verilogName = "emitted_2_0"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_2_44, %311 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_2_44, %false_40 : i1
    }
    %312 = sv.read_inout %emitted_2_44 : !hw.inout<i1>
    %313 = comb.xor %312, %true_41 : i1
    %314 = sv.read_inout %273 : !hw.inout<i1>
    %315 = comb.and %313, %314 : i1
    %316 = sv.wire {hw.verilogName = "_GEN_37"} : !hw.inout<i1>
    sv.assign %316, %315 : i1
    %317 = sv.read_inout %316 : !hw.inout<i1>
    %318 = sv.read_inout %4 : !hw.inout<i1>
    %319 = comb.and %318, %317 : i1
    %320 = sv.read_inout %emitted_2_44 : !hw.inout<i1>
    %321 = comb.or %319, %320 : i1
    sv.assign %done2_7, %321 : i1
    %322 = sv.read_inout %done0_9 : !hw.inout<i1>
    %323 = sv.read_inout %done1_8 : !hw.inout<i1>
    %324 = sv.read_inout %done2_7 : !hw.inout<i1>
    %325 = comb.and %323, %324 : i1
    %326 = comb.and %322, %325 : i1
    sv.assign %allDone_6, %326 : i1
    %327 = sv.read_inout %247 : !hw.inout<i1>
    %328 = sv.read_inout %316 : !hw.inout<i1>
    %329 = comb.and %327, %328 : i1
    %330 = sv.wire {hw.verilogName = "_GEN_38"} : !hw.inout<i1>
    sv.assign %330, %329 : i1
    %331 = sv.read_inout %330 : !hw.inout<i1>
    %332 = sv.read_inout %allDone_3 : !hw.inout<i1>
    %333 = comb.and %332, %331 : i1
    sv.assign %4, %333 : i1
    %334 = sv.read_inout %238 : !hw.inout<i32>
    %335 = sv.read_inout %280 : !hw.inout<i32>
    %336 = comb.mul %334, %335 : i32
    %337 = sv.wire {hw.verilogName = "_GEN_39"} : !hw.inout<i32>
    sv.assign %337, %336 : i32
    %false_45 = hw.constant false
    %true_46 = hw.constant true
    %338 = sv.read_inout %allDone_3 : !hw.inout<i1>
    %339 = comb.xor %338, %true_46 : i1
    %340 = sv.read_inout %done0_5 : !hw.inout<i1>
    %341 = comb.and %340, %339 : i1
    %emitted_0_47 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_4"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_47, %341 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_47, %false_45 : i1
    }
    %342 = sv.read_inout %emitted_0_47 : !hw.inout<i1>
    %343 = comb.xor %342, %true_46 : i1
    %344 = sv.read_inout %330 : !hw.inout<i1>
    %345 = comb.and %343, %344 : i1
    %346 = sv.wire {hw.verilogName = "_GEN_40"} : !hw.inout<i1>
    sv.assign %346, %345 : i1
    %347 = sv.read_inout %346 : !hw.inout<i1>
    %348 = sv.read_inout %2 : !hw.inout<i1>
    %349 = comb.and %348, %347 : i1
    %350 = sv.read_inout %emitted_0_47 : !hw.inout<i1>
    %351 = comb.or %349, %350 : i1
    sv.assign %done0_5, %351 : i1
    %352 = sv.read_inout %allDone_3 : !hw.inout<i1>
    %353 = comb.xor %352, %true_46 : i1
    %354 = sv.read_inout %done1_4 : !hw.inout<i1>
    %355 = comb.and %354, %353 : i1
    %emitted_1_48 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_4"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_48, %355 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_48, %false_45 : i1
    }
    %356 = sv.read_inout %emitted_1_48 : !hw.inout<i1>
    %357 = comb.xor %356, %true_46 : i1
    %358 = sv.read_inout %330 : !hw.inout<i1>
    %359 = comb.and %357, %358 : i1
    %360 = sv.wire {hw.verilogName = "_GEN_41"} : !hw.inout<i1>
    sv.assign %360, %359 : i1
    %361 = sv.read_inout %360 : !hw.inout<i1>
    %362 = sv.read_inout %3 : !hw.inout<i1>
    %363 = comb.and %362, %361 : i1
    %364 = sv.read_inout %emitted_1_48 : !hw.inout<i1>
    %365 = comb.or %363, %364 : i1
    sv.assign %done1_4, %365 : i1
    %366 = sv.read_inout %done0_5 : !hw.inout<i1>
    %367 = sv.read_inout %done1_4 : !hw.inout<i1>
    %368 = comb.and %366, %367 : i1
    sv.assign %allDone_3, %368 : i1
    %369 = sv.read_inout %302 : !hw.inout<i1>
    %370 = sv.read_inout %360 : !hw.inout<i1>
    %371 = comb.and %369, %370 : i1
    %372 = sv.wire {hw.verilogName = "_GEN_42"} : !hw.inout<i1>
    sv.assign %372, %371 : i1
    %373 = sv.read_inout %372 : !hw.inout<i1>
    %374 = sv.read_inout %allDone_0 : !hw.inout<i1>
    %375 = comb.and %374, %373 : i1
    sv.assign %3, %375 : i1
    %376 = sv.read_inout %280 : !hw.inout<i32>
    %377 = sv.read_inout %337 : !hw.inout<i32>
    %378 = comb.divs %376, %377 : i32
    %379 = sv.wire {hw.verilogName = "_GEN_43"} : !hw.inout<i32>
    sv.assign %379, %378 : i32
    %false_49 = hw.constant false
    %true_50 = hw.constant true
    %380 = sv.read_inout %allDone_0 : !hw.inout<i1>
    %381 = comb.xor %380, %true_50 : i1
    %382 = sv.read_inout %done0_2 : !hw.inout<i1>
    %383 = comb.and %382, %381 : i1
    %emitted_0_51 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_5"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_51, %383 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_51, %false_49 : i1
    }
    %384 = sv.read_inout %emitted_0_51 : !hw.inout<i1>
    %385 = comb.xor %384, %true_50 : i1
    %386 = sv.read_inout %372 : !hw.inout<i1>
    %387 = comb.and %385, %386 : i1
    %388 = sv.wire {hw.verilogName = "_GEN_44"} : !hw.inout<i1>
    sv.assign %388, %387 : i1
    %389 = sv.read_inout %388 : !hw.inout<i1>
    %390 = sv.read_inout %2 : !hw.inout<i1>
    %391 = comb.and %390, %389 : i1
    %392 = sv.read_inout %emitted_0_51 : !hw.inout<i1>
    %393 = comb.or %391, %392 : i1
    sv.assign %done0_2, %393 : i1
    %394 = sv.read_inout %allDone_0 : !hw.inout<i1>
    %395 = comb.xor %394, %true_50 : i1
    %396 = sv.read_inout %done1_1 : !hw.inout<i1>
    %397 = comb.and %396, %395 : i1
    %emitted_1_52 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_5"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_52, %397 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_52, %false_49 : i1
    }
    %398 = sv.read_inout %emitted_1_52 : !hw.inout<i1>
    %399 = comb.xor %398, %true_50 : i1
    %400 = sv.read_inout %372 : !hw.inout<i1>
    %401 = comb.and %399, %400 : i1
    %402 = sv.wire {hw.verilogName = "_GEN_45"} : !hw.inout<i1>
    sv.assign %402, %401 : i1
    %403 = sv.read_inout %402 : !hw.inout<i1>
    %404 = sv.read_inout %2 : !hw.inout<i1>
    %405 = comb.and %404, %403 : i1
    %406 = sv.read_inout %emitted_1_52 : !hw.inout<i1>
    %407 = comb.or %405, %406 : i1
    sv.assign %done1_1, %407 : i1
    %408 = sv.read_inout %done0_2 : !hw.inout<i1>
    %409 = sv.read_inout %done1_1 : !hw.inout<i1>
    %410 = comb.and %408, %409 : i1
    sv.assign %allDone_0, %410 : i1
    %411 = sv.read_inout %337 : !hw.inout<i32>
    %412 = sv.read_inout %379 : !hw.inout<i32>
    %413 = comb.and %411, %412 : i32
    %414 = sv.read_inout %53 : !hw.inout<i32>
    %415 = sv.read_inout %379 : !hw.inout<i32>
    %416 = comb.or %414, %415 : i32
    %417 = sv.read_inout %62 : !hw.inout<i1>
    %418 = sv.read_inout %346 : !hw.inout<i1>
    %419 = sv.read_inout %388 : !hw.inout<i1>
    %420 = sv.read_inout %402 : !hw.inout<i1>
    %421 = comb.and %418, %420 : i1
    %422 = comb.and %417, %419 : i1
    %423 = comb.and %421, %422 : i1
    %424 = sv.wire {hw.verilogName = "_GEN_46"} : !hw.inout<i1>
    sv.assign %424, %423 : i1
    %425 = sv.read_inout %424 : !hw.inout<i1>
    %426 = sv.read_inout %allDone : !hw.inout<i1>
    %427 = comb.and %426, %425 : i1
    sv.assign %2, %427 : i1
    %428 = comb.xor %413, %416 : i32
    sv.assign %1, %428 : i32
    %c0_i0 = hw.constant 0 : i0
    %false_53 = hw.constant false
    %true_54 = hw.constant true
    %429 = sv.read_inout %allDone : !hw.inout<i1>
    %430 = comb.xor %429, %true_54 : i1
    %431 = sv.read_inout %done0 : !hw.inout<i1>
    %432 = comb.and %431, %430 : i1
    %emitted_0_55 = sv.reg sym @emitted_0 name "emitted_0" {hw.verilogName = "emitted_0_6"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_0_55, %432 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_0_55, %false_53 : i1
    }
    %433 = sv.read_inout %emitted_0_55 : !hw.inout<i1>
    %434 = comb.xor %433, %true_54 : i1
    %435 = sv.read_inout %424 : !hw.inout<i1>
    %436 = comb.and %434, %435 : i1
    %437 = sv.wire {hw.verilogName = "_GEN_47"} : !hw.inout<i1>
    sv.assign %437, %436 : i1
    %438 = sv.read_inout %437 : !hw.inout<i1>
    %439 = comb.and %out0_ready, %438 : i1
    %440 = sv.read_inout %emitted_0_55 : !hw.inout<i1>
    %441 = comb.or %439, %440 : i1
    sv.assign %done0, %441 : i1
    %442 = sv.read_inout %allDone : !hw.inout<i1>
    %443 = comb.xor %442, %true_54 : i1
    %444 = sv.read_inout %done1 : !hw.inout<i1>
    %445 = comb.and %444, %443 : i1
    %emitted_1_56 = sv.reg sym @emitted_1 name "emitted_1" {hw.verilogName = "emitted_1_6"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_1_56, %445 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_1_56, %false_53 : i1
    }
    %446 = sv.read_inout %emitted_1_56 : !hw.inout<i1>
    %447 = comb.xor %446, %true_54 : i1
    %448 = sv.read_inout %424 : !hw.inout<i1>
    %449 = comb.and %447, %448 : i1
    %450 = sv.wire {hw.verilogName = "_GEN_48"} : !hw.inout<i1>
    sv.assign %450, %449 : i1
    %451 = sv.read_inout %450 : !hw.inout<i1>
    %452 = comb.and %out2_ready, %451 : i1
    %453 = sv.read_inout %emitted_1_56 : !hw.inout<i1>
    %454 = comb.or %452, %453 : i1
    sv.assign %done1, %454 : i1
    %455 = sv.read_inout %allDone : !hw.inout<i1>
    %456 = comb.xor %455, %true_54 : i1
    %457 = sv.read_inout %done2 : !hw.inout<i1>
    %458 = comb.and %457, %456 : i1
    %emitted_2_57 = sv.reg sym @emitted_2 name "emitted_2" {hw.verilogName = "emitted_2_1"} : !hw.inout<i1> 
    sv.alwaysff(posedge %clk_0) {
      sv.passign %emitted_2_57, %458 : i1
    }(syncreset : posedge %rst_0) {
      sv.passign %emitted_2_57, %false_53 : i1
    }
    %459 = sv.read_inout %emitted_2_57 : !hw.inout<i1>
    %460 = comb.xor %459, %true_54 : i1
    %461 = sv.read_inout %424 : !hw.inout<i1>
    %462 = comb.and %460, %461 : i1
    sv.assign %0, %462 : i1
    %463 = sv.read_inout %7 : !hw.inout<i1>
    %464 = sv.read_inout %0 : !hw.inout<i1>
    %465 = comb.and %463, %464 : i1
    %466 = sv.read_inout %emitted_2_57 : !hw.inout<i1>
    %467 = comb.or %465, %466 : i1
    sv.assign %done2, %467 : i1
    %468 = sv.read_inout %done0 : !hw.inout<i1>
    %469 = sv.read_inout %done1 : !hw.inout<i1>
    %470 = sv.read_inout %done2 : !hw.inout<i1>
    %471 = comb.and %469, %470 : i1
    %472 = comb.and %468, %471 : i1
    sv.assign %allDone, %472 : i1
    %473 = sv.read_inout %280 : !hw.inout<i32>
    %474 = sv.read_inout %289 : !hw.inout<i1>
    %475 = sv.read_inout %1 : !hw.inout<i32>
    %476 = sv.read_inout %437 : !hw.inout<i1>
    %477 = sv.read_inout %450 : !hw.inout<i1>
    hw.output %17, %20, %30, %33, %49, %true_23, %true, %475, %476, %473, %474, %c0_i0, %477 : i1, i1, i1, i1, i1, i1, i1, i32, i1, i32, i1, i0, i1
  }
}


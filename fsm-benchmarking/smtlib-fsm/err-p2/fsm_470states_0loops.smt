; 
(set-info :status unknown)
(declare-fun var1_0 (Int) Int)
(declare-fun input-arg0 (Int) Int)
(declare-fun time-to-state (Int) Int)
(assert
 (let (($x14 (= (var1_0 0) 0)))
 (let (($x11 (= (input-arg0 0) 0)))
 (let (($x9 (= (time-to-state 0) 0)))
 (let (($x12 (and $x9 $x11)))
 (and $x12 $x14))))))
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 1) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x61 (= ?x60 0)))
 (let (($x78 (and $x61 $x77)))
 (=> $x78 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 3) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x93 (= ?x60 1)))
 (let (($x98 (and $x93 $x77)))
 (=> $x98 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 4) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x112 (= ?x60 3)))
 (let (($x117 (and $x112 $x77)))
 (=> $x117 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 5) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x131 (= ?x60 4)))
 (let (($x136 (and $x131 $x77)))
 (=> $x136 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 6) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x150 (= ?x60 5)))
 (let (($x155 (and $x150 $x77)))
 (=> $x155 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 7) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x169 (= ?x60 6)))
 (let (($x174 (and $x169 $x77)))
 (=> $x174 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 8) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x188 (= ?x60 7)))
 (let (($x193 (and $x188 $x77)))
 (=> $x193 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 9) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x207 (= ?x60 8)))
 (let (($x212 (and $x207 $x77)))
 (=> $x212 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 10) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x226 (= ?x60 9)))
 (let (($x231 (and $x226 $x77)))
 (=> $x231 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 11) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x245 (= ?x60 10)))
 (let (($x250 (and $x245 $x77)))
 (=> $x250 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 12) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x264 (= ?x60 11)))
 (let (($x269 (and $x264 $x77)))
 (=> $x269 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 13) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x283 (= ?x60 12)))
 (let (($x288 (and $x283 $x77)))
 (=> $x288 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 14) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x302 (= ?x60 13)))
 (let (($x307 (and $x302 $x77)))
 (=> $x307 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 15) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x321 (= ?x60 14)))
 (let (($x326 (and $x321 $x77)))
 (=> $x326 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 16) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x340 (= ?x60 15)))
 (let (($x345 (and $x340 $x77)))
 (=> $x345 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 17) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x359 (= ?x60 16)))
 (let (($x364 (and $x359 $x77)))
 (=> $x364 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 18) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x378 (= ?x60 17)))
 (let (($x383 (and $x378 $x77)))
 (=> $x383 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 19) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x397 (= ?x60 18)))
 (let (($x402 (and $x397 $x77)))
 (=> $x402 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 20) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x416 (= ?x60 19)))
 (let (($x421 (and $x416 $x77)))
 (=> $x421 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 21) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x435 (= ?x60 20)))
 (let (($x440 (and $x435 $x77)))
 (=> $x440 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 22) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x454 (= ?x60 21)))
 (let (($x459 (and $x454 $x77)))
 (=> $x459 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 23) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x473 (= ?x60 22)))
 (let (($x478 (and $x473 $x77)))
 (=> $x478 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 24) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x492 (= ?x60 23)))
 (let (($x497 (and $x492 $x77)))
 (=> $x497 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 25) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x511 (= ?x60 24)))
 (let (($x516 (and $x511 $x77)))
 (=> $x516 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 26) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x530 (= ?x60 25)))
 (let (($x535 (and $x530 $x77)))
 (=> $x535 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 27) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x549 (= ?x60 26)))
 (let (($x554 (and $x549 $x77)))
 (=> $x554 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 28) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x568 (= ?x60 27)))
 (let (($x573 (and $x568 $x77)))
 (=> $x573 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 29) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x587 (= ?x60 28)))
 (let (($x592 (and $x587 $x77)))
 (=> $x592 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 30) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x606 (= ?x60 29)))
 (let (($x611 (and $x606 $x77)))
 (=> $x611 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 31) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x625 (= ?x60 30)))
 (let (($x630 (and $x625 $x77)))
 (=> $x630 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 32) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x644 (= ?x60 31)))
 (let (($x649 (and $x644 $x77)))
 (=> $x649 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 33) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x663 (= ?x60 32)))
 (let (($x668 (and $x663 $x77)))
 (=> $x668 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 34) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x682 (= ?x60 33)))
 (let (($x687 (and $x682 $x77)))
 (=> $x687 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 35) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x701 (= ?x60 34)))
 (let (($x706 (and $x701 $x77)))
 (=> $x706 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 36) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x720 (= ?x60 35)))
 (let (($x725 (and $x720 $x77)))
 (=> $x725 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 37) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x739 (= ?x60 36)))
 (let (($x744 (and $x739 $x77)))
 (=> $x744 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 38) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x758 (= ?x60 37)))
 (let (($x763 (and $x758 $x77)))
 (=> $x763 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 39) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x777 (= ?x60 38)))
 (let (($x782 (and $x777 $x77)))
 (=> $x782 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 40) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x796 (= ?x60 39)))
 (let (($x801 (and $x796 $x77)))
 (=> $x801 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 41) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x815 (= ?x60 40)))
 (let (($x820 (and $x815 $x77)))
 (=> $x820 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 42) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x834 (= ?x60 41)))
 (let (($x839 (and $x834 $x77)))
 (=> $x839 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 43) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x853 (= ?x60 42)))
 (let (($x858 (and $x853 $x77)))
 (=> $x858 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 44) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x872 (= ?x60 43)))
 (let (($x877 (and $x872 $x77)))
 (=> $x877 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 45) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x891 (= ?x60 44)))
 (let (($x896 (and $x891 $x77)))
 (=> $x896 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 46) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x910 (= ?x60 45)))
 (let (($x915 (and $x910 $x77)))
 (=> $x915 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 47) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x929 (= ?x60 46)))
 (let (($x934 (and $x929 $x77)))
 (=> $x934 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 48) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x948 (= ?x60 47)))
 (let (($x953 (and $x948 $x77)))
 (=> $x953 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 49) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x967 (= ?x60 48)))
 (let (($x972 (and $x967 $x77)))
 (=> $x972 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 50) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x986 (= ?x60 49)))
 (let (($x991 (and $x986 $x77)))
 (=> $x991 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 51) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1005 (= ?x60 50)))
 (let (($x1010 (and $x1005 $x77)))
 (=> $x1010 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 52) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1024 (= ?x60 51)))
 (let (($x1029 (and $x1024 $x77)))
 (=> $x1029 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 53) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1043 (= ?x60 52)))
 (let (($x1048 (and $x1043 $x77)))
 (=> $x1048 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 54) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1062 (= ?x60 53)))
 (let (($x1067 (and $x1062 $x77)))
 (=> $x1067 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 55) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1081 (= ?x60 54)))
 (let (($x1086 (and $x1081 $x77)))
 (=> $x1086 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 56) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1100 (= ?x60 55)))
 (let (($x1105 (and $x1100 $x77)))
 (=> $x1105 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 57) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1119 (= ?x60 56)))
 (let (($x1124 (and $x1119 $x77)))
 (=> $x1124 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 58) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1138 (= ?x60 57)))
 (let (($x1143 (and $x1138 $x77)))
 (=> $x1143 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 59) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1157 (= ?x60 58)))
 (let (($x1162 (and $x1157 $x77)))
 (=> $x1162 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 60) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1176 (= ?x60 59)))
 (let (($x1181 (and $x1176 $x77)))
 (=> $x1181 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 61) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1195 (= ?x60 60)))
 (let (($x1200 (and $x1195 $x77)))
 (=> $x1200 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 62) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1214 (= ?x60 61)))
 (let (($x1219 (and $x1214 $x77)))
 (=> $x1219 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 63) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1233 (= ?x60 62)))
 (let (($x1238 (and $x1233 $x77)))
 (=> $x1238 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 64) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1252 (= ?x60 63)))
 (let (($x1257 (and $x1252 $x77)))
 (=> $x1257 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 65) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1271 (= ?x60 64)))
 (let (($x1276 (and $x1271 $x77)))
 (=> $x1276 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 66) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1290 (= ?x60 65)))
 (let (($x1295 (and $x1290 $x77)))
 (=> $x1295 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 67) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1309 (= ?x60 66)))
 (let (($x1314 (and $x1309 $x77)))
 (=> $x1314 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 68) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1328 (= ?x60 67)))
 (let (($x1333 (and $x1328 $x77)))
 (=> $x1333 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 69) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1347 (= ?x60 68)))
 (let (($x1352 (and $x1347 $x77)))
 (=> $x1352 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 70) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1366 (= ?x60 69)))
 (let (($x1371 (and $x1366 $x77)))
 (=> $x1371 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 71) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1385 (= ?x60 70)))
 (let (($x1390 (and $x1385 $x77)))
 (=> $x1390 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 72) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1404 (= ?x60 71)))
 (let (($x1409 (and $x1404 $x77)))
 (=> $x1409 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 73) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1423 (= ?x60 72)))
 (let (($x1428 (and $x1423 $x77)))
 (=> $x1428 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 74) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1442 (= ?x60 73)))
 (let (($x1447 (and $x1442 $x77)))
 (=> $x1447 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 75) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1461 (= ?x60 74)))
 (let (($x1466 (and $x1461 $x77)))
 (=> $x1466 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 76) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1480 (= ?x60 75)))
 (let (($x1485 (and $x1480 $x77)))
 (=> $x1485 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 77) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1499 (= ?x60 76)))
 (let (($x1504 (and $x1499 $x77)))
 (=> $x1504 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 78) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1518 (= ?x60 77)))
 (let (($x1523 (and $x1518 $x77)))
 (=> $x1523 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 79) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1537 (= ?x60 78)))
 (let (($x1542 (and $x1537 $x77)))
 (=> $x1542 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 80) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1556 (= ?x60 79)))
 (let (($x1561 (and $x1556 $x77)))
 (=> $x1561 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 81) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1575 (= ?x60 80)))
 (let (($x1580 (and $x1575 $x77)))
 (=> $x1580 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 82) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1594 (= ?x60 81)))
 (let (($x1599 (and $x1594 $x77)))
 (=> $x1599 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 83) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1613 (= ?x60 82)))
 (let (($x1618 (and $x1613 $x77)))
 (=> $x1618 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 84) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1632 (= ?x60 83)))
 (let (($x1637 (and $x1632 $x77)))
 (=> $x1637 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 85) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1651 (= ?x60 84)))
 (let (($x1656 (and $x1651 $x77)))
 (=> $x1656 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 86) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1670 (= ?x60 85)))
 (let (($x1675 (and $x1670 $x77)))
 (=> $x1675 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 87) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1689 (= ?x60 86)))
 (let (($x1694 (and $x1689 $x77)))
 (=> $x1694 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 88) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1708 (= ?x60 87)))
 (let (($x1713 (and $x1708 $x77)))
 (=> $x1713 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 89) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1727 (= ?x60 88)))
 (let (($x1732 (and $x1727 $x77)))
 (=> $x1732 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 90) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1746 (= ?x60 89)))
 (let (($x1751 (and $x1746 $x77)))
 (=> $x1751 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 91) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1765 (= ?x60 90)))
 (let (($x1770 (and $x1765 $x77)))
 (=> $x1770 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 91) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 92) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1784 (= ?x60 91)))
 (let (($x1789 (and $x1784 $x77)))
 (=> $x1789 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 92) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 93) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1803 (= ?x60 92)))
 (let (($x1808 (and $x1803 $x77)))
 (=> $x1808 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 93) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 94) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1822 (= ?x60 93)))
 (let (($x1827 (and $x1822 $x77)))
 (=> $x1827 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 94) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 95) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1841 (= ?x60 94)))
 (let (($x1846 (and $x1841 $x77)))
 (=> $x1846 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 95) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 96) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1860 (= ?x60 95)))
 (let (($x1865 (and $x1860 $x77)))
 (=> $x1865 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 96) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 97) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1879 (= ?x60 96)))
 (let (($x1884 (and $x1879 $x77)))
 (=> $x1884 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 97) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 98) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1898 (= ?x60 97)))
 (let (($x1903 (and $x1898 $x77)))
 (=> $x1903 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 98) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 99) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1917 (= ?x60 98)))
 (let (($x1922 (and $x1917 $x77)))
 (=> $x1922 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 99) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 100) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1936 (= ?x60 99)))
 (let (($x1941 (and $x1936 $x77)))
 (=> $x1941 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 100) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 101) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1955 (= ?x60 100)))
 (let (($x1960 (and $x1955 $x77)))
 (=> $x1960 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 101) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 102) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1974 (= ?x60 101)))
 (let (($x1979 (and $x1974 $x77)))
 (=> $x1979 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 102) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 103) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1993 (= ?x60 102)))
 (let (($x1998 (and $x1993 $x77)))
 (=> $x1998 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 103) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 104) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2012 (= ?x60 103)))
 (let (($x2017 (and $x2012 $x77)))
 (=> $x2017 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 104) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 105) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2031 (= ?x60 104)))
 (let (($x2036 (and $x2031 $x77)))
 (=> $x2036 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 105) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 106) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2050 (= ?x60 105)))
 (let (($x2055 (and $x2050 $x77)))
 (=> $x2055 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 106) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 107) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2069 (= ?x60 106)))
 (let (($x2074 (and $x2069 $x77)))
 (=> $x2074 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 107) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 108) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2088 (= ?x60 107)))
 (let (($x2093 (and $x2088 $x77)))
 (=> $x2093 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 108) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 109) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2107 (= ?x60 108)))
 (let (($x2112 (and $x2107 $x77)))
 (=> $x2112 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 109) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 110) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2126 (= ?x60 109)))
 (let (($x2131 (and $x2126 $x77)))
 (=> $x2131 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 110) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 111) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2145 (= ?x60 110)))
 (let (($x2150 (and $x2145 $x77)))
 (=> $x2150 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 111) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 112) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2164 (= ?x60 111)))
 (let (($x2169 (and $x2164 $x77)))
 (=> $x2169 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 112) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 113) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2183 (= ?x60 112)))
 (let (($x2188 (and $x2183 $x77)))
 (=> $x2188 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 113) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 114) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2202 (= ?x60 113)))
 (let (($x2207 (and $x2202 $x77)))
 (=> $x2207 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 114) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 115) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2221 (= ?x60 114)))
 (let (($x2226 (and $x2221 $x77)))
 (=> $x2226 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 115) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 116) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2240 (= ?x60 115)))
 (let (($x2245 (and $x2240 $x77)))
 (=> $x2245 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 116) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 117) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2259 (= ?x60 116)))
 (let (($x2264 (and $x2259 $x77)))
 (=> $x2264 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 117) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 118) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2278 (= ?x60 117)))
 (let (($x2283 (and $x2278 $x77)))
 (=> $x2283 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 118) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 119) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2297 (= ?x60 118)))
 (let (($x2302 (and $x2297 $x77)))
 (=> $x2302 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 119) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 120) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2316 (= ?x60 119)))
 (let (($x2321 (and $x2316 $x77)))
 (=> $x2321 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 120) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 121) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2335 (= ?x60 120)))
 (let (($x2340 (and $x2335 $x77)))
 (=> $x2340 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 121) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 122) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2354 (= ?x60 121)))
 (let (($x2359 (and $x2354 $x77)))
 (=> $x2359 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 122) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 123) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2373 (= ?x60 122)))
 (let (($x2378 (and $x2373 $x77)))
 (=> $x2378 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 123) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 124) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2392 (= ?x60 123)))
 (let (($x2397 (and $x2392 $x77)))
 (=> $x2397 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 124) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 125) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2411 (= ?x60 124)))
 (let (($x2416 (and $x2411 $x77)))
 (=> $x2416 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 125) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 126) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2430 (= ?x60 125)))
 (let (($x2435 (and $x2430 $x77)))
 (=> $x2435 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 126) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 127) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2449 (= ?x60 126)))
 (let (($x2454 (and $x2449 $x77)))
 (=> $x2454 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 127) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 128) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2468 (= ?x60 127)))
 (let (($x2473 (and $x2468 $x77)))
 (=> $x2473 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 128) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 129) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2487 (= ?x60 128)))
 (let (($x2492 (and $x2487 $x77)))
 (=> $x2492 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 129) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 130) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2506 (= ?x60 129)))
 (let (($x2511 (and $x2506 $x77)))
 (=> $x2511 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 130) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 131) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2525 (= ?x60 130)))
 (let (($x2530 (and $x2525 $x77)))
 (=> $x2530 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 131) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 132) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2544 (= ?x60 131)))
 (let (($x2549 (and $x2544 $x77)))
 (=> $x2549 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 132) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 133) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2563 (= ?x60 132)))
 (let (($x2568 (and $x2563 $x77)))
 (=> $x2568 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 133) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 134) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2582 (= ?x60 133)))
 (let (($x2587 (and $x2582 $x77)))
 (=> $x2587 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 134) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 135) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2601 (= ?x60 134)))
 (let (($x2606 (and $x2601 $x77)))
 (=> $x2606 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 135) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 136) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2620 (= ?x60 135)))
 (let (($x2625 (and $x2620 $x77)))
 (=> $x2625 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 136) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 137) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2639 (= ?x60 136)))
 (let (($x2644 (and $x2639 $x77)))
 (=> $x2644 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 137) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 138) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2658 (= ?x60 137)))
 (let (($x2663 (and $x2658 $x77)))
 (=> $x2663 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 138) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 139) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2677 (= ?x60 138)))
 (let (($x2682 (and $x2677 $x77)))
 (=> $x2682 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 139) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 140) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2696 (= ?x60 139)))
 (let (($x2701 (and $x2696 $x77)))
 (=> $x2701 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 140) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 141) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2715 (= ?x60 140)))
 (let (($x2720 (and $x2715 $x77)))
 (=> $x2720 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 141) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 142) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2734 (= ?x60 141)))
 (let (($x2739 (and $x2734 $x77)))
 (=> $x2739 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 142) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 143) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2753 (= ?x60 142)))
 (let (($x2758 (and $x2753 $x77)))
 (=> $x2758 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 143) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 144) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2772 (= ?x60 143)))
 (let (($x2777 (and $x2772 $x77)))
 (=> $x2777 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 144) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 145) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2791 (= ?x60 144)))
 (let (($x2796 (and $x2791 $x77)))
 (=> $x2796 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 145) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 146) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2810 (= ?x60 145)))
 (let (($x2815 (and $x2810 $x77)))
 (=> $x2815 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 146) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 147) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2829 (= ?x60 146)))
 (let (($x2834 (and $x2829 $x77)))
 (=> $x2834 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 147) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 148) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2848 (= ?x60 147)))
 (let (($x2853 (and $x2848 $x77)))
 (=> $x2853 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 148) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 149) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2867 (= ?x60 148)))
 (let (($x2872 (and $x2867 $x77)))
 (=> $x2872 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 149) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 150) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2886 (= ?x60 149)))
 (let (($x2891 (and $x2886 $x77)))
 (=> $x2891 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 150) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 151) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2905 (= ?x60 150)))
 (let (($x2910 (and $x2905 $x77)))
 (=> $x2910 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 151) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 152) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2924 (= ?x60 151)))
 (let (($x2929 (and $x2924 $x77)))
 (=> $x2929 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 152) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 153) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2943 (= ?x60 152)))
 (let (($x2948 (and $x2943 $x77)))
 (=> $x2948 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 153) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 154) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2962 (= ?x60 153)))
 (let (($x2967 (and $x2962 $x77)))
 (=> $x2967 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 154) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 155) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x2981 (= ?x60 154)))
 (let (($x2986 (and $x2981 $x77)))
 (=> $x2986 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 155) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 156) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3000 (= ?x60 155)))
 (let (($x3005 (and $x3000 $x77)))
 (=> $x3005 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 156) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 157) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3019 (= ?x60 156)))
 (let (($x3024 (and $x3019 $x77)))
 (=> $x3024 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 157) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 158) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3038 (= ?x60 157)))
 (let (($x3043 (and $x3038 $x77)))
 (=> $x3043 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 158) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 159) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3057 (= ?x60 158)))
 (let (($x3062 (and $x3057 $x77)))
 (=> $x3062 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 159) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 160) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3076 (= ?x60 159)))
 (let (($x3081 (and $x3076 $x77)))
 (=> $x3081 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 160) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 161) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3095 (= ?x60 160)))
 (let (($x3100 (and $x3095 $x77)))
 (=> $x3100 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 161) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 162) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3114 (= ?x60 161)))
 (let (($x3119 (and $x3114 $x77)))
 (=> $x3119 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 162) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 163) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3133 (= ?x60 162)))
 (let (($x3138 (and $x3133 $x77)))
 (=> $x3138 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 163) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 164) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3152 (= ?x60 163)))
 (let (($x3157 (and $x3152 $x77)))
 (=> $x3157 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 164) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 165) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3171 (= ?x60 164)))
 (let (($x3176 (and $x3171 $x77)))
 (=> $x3176 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 165) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 166) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3190 (= ?x60 165)))
 (let (($x3195 (and $x3190 $x77)))
 (=> $x3195 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 166) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 167) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3209 (= ?x60 166)))
 (let (($x3214 (and $x3209 $x77)))
 (=> $x3214 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 167) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 168) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3228 (= ?x60 167)))
 (let (($x3233 (and $x3228 $x77)))
 (=> $x3233 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 168) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 169) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3247 (= ?x60 168)))
 (let (($x3252 (and $x3247 $x77)))
 (=> $x3252 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 169) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 170) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3266 (= ?x60 169)))
 (let (($x3271 (and $x3266 $x77)))
 (=> $x3271 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 170) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 171) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3285 (= ?x60 170)))
 (let (($x3290 (and $x3285 $x77)))
 (=> $x3290 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 171) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 172) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3304 (= ?x60 171)))
 (let (($x3309 (and $x3304 $x77)))
 (=> $x3309 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 172) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 173) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3323 (= ?x60 172)))
 (let (($x3328 (and $x3323 $x77)))
 (=> $x3328 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 173) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 174) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3342 (= ?x60 173)))
 (let (($x3347 (and $x3342 $x77)))
 (=> $x3347 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 174) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 175) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3361 (= ?x60 174)))
 (let (($x3366 (and $x3361 $x77)))
 (=> $x3366 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 175) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 176) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3380 (= ?x60 175)))
 (let (($x3385 (and $x3380 $x77)))
 (=> $x3385 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 176) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 177) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3399 (= ?x60 176)))
 (let (($x3404 (and $x3399 $x77)))
 (=> $x3404 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 177) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 178) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3418 (= ?x60 177)))
 (let (($x3423 (and $x3418 $x77)))
 (=> $x3423 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 178) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 179) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3437 (= ?x60 178)))
 (let (($x3442 (and $x3437 $x77)))
 (=> $x3442 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 179) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 180) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3456 (= ?x60 179)))
 (let (($x3461 (and $x3456 $x77)))
 (=> $x3461 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 180) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 181) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3475 (= ?x60 180)))
 (let (($x3480 (and $x3475 $x77)))
 (=> $x3480 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 181) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 182) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3494 (= ?x60 181)))
 (let (($x3499 (and $x3494 $x77)))
 (=> $x3499 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 182) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 183) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3513 (= ?x60 182)))
 (let (($x3518 (and $x3513 $x77)))
 (=> $x3518 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 183) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 184) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3532 (= ?x60 183)))
 (let (($x3537 (and $x3532 $x77)))
 (=> $x3537 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 184) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 185) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3551 (= ?x60 184)))
 (let (($x3556 (and $x3551 $x77)))
 (=> $x3556 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 185) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 186) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3570 (= ?x60 185)))
 (let (($x3575 (and $x3570 $x77)))
 (=> $x3575 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 186) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 187) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3589 (= ?x60 186)))
 (let (($x3594 (and $x3589 $x77)))
 (=> $x3594 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 187) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 188) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3608 (= ?x60 187)))
 (let (($x3613 (and $x3608 $x77)))
 (=> $x3613 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 188) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 189) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3627 (= ?x60 188)))
 (let (($x3632 (and $x3627 $x77)))
 (=> $x3632 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 189) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 190) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3646 (= ?x60 189)))
 (let (($x3651 (and $x3646 $x77)))
 (=> $x3651 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 190) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 191) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3665 (= ?x60 190)))
 (let (($x3670 (and $x3665 $x77)))
 (=> $x3670 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 191) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 192) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3684 (= ?x60 191)))
 (let (($x3689 (and $x3684 $x77)))
 (=> $x3689 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 192) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 193) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3703 (= ?x60 192)))
 (let (($x3708 (and $x3703 $x77)))
 (=> $x3708 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 193) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 194) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3722 (= ?x60 193)))
 (let (($x3727 (and $x3722 $x77)))
 (=> $x3727 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 194) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 195) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3741 (= ?x60 194)))
 (let (($x3746 (and $x3741 $x77)))
 (=> $x3746 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 195) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 196) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3760 (= ?x60 195)))
 (let (($x3765 (and $x3760 $x77)))
 (=> $x3765 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 196) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 197) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3779 (= ?x60 196)))
 (let (($x3784 (and $x3779 $x77)))
 (=> $x3784 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 197) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 198) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3798 (= ?x60 197)))
 (let (($x3803 (and $x3798 $x77)))
 (=> $x3803 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 198) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 199) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3817 (= ?x60 198)))
 (let (($x3822 (and $x3817 $x77)))
 (=> $x3822 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 199) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 200) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3836 (= ?x60 199)))
 (let (($x3841 (and $x3836 $x77)))
 (=> $x3841 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 200) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 201) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3855 (= ?x60 200)))
 (let (($x3860 (and $x3855 $x77)))
 (=> $x3860 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 201) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 202) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3874 (= ?x60 201)))
 (let (($x3879 (and $x3874 $x77)))
 (=> $x3879 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 202) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 203) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3893 (= ?x60 202)))
 (let (($x3898 (and $x3893 $x77)))
 (=> $x3898 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 203) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 204) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3912 (= ?x60 203)))
 (let (($x3917 (and $x3912 $x77)))
 (=> $x3917 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 204) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 205) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3931 (= ?x60 204)))
 (let (($x3936 (and $x3931 $x77)))
 (=> $x3936 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 205) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 206) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3950 (= ?x60 205)))
 (let (($x3955 (and $x3950 $x77)))
 (=> $x3955 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 206) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 207) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3969 (= ?x60 206)))
 (let (($x3974 (and $x3969 $x77)))
 (=> $x3974 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 207) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 208) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x3988 (= ?x60 207)))
 (let (($x3993 (and $x3988 $x77)))
 (=> $x3993 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 208) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 209) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4007 (= ?x60 208)))
 (let (($x4012 (and $x4007 $x77)))
 (=> $x4012 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 209) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 210) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4026 (= ?x60 209)))
 (let (($x4031 (and $x4026 $x77)))
 (=> $x4031 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 210) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 211) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4045 (= ?x60 210)))
 (let (($x4050 (and $x4045 $x77)))
 (=> $x4050 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 211) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 212) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4064 (= ?x60 211)))
 (let (($x4069 (and $x4064 $x77)))
 (=> $x4069 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 212) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 213) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4083 (= ?x60 212)))
 (let (($x4088 (and $x4083 $x77)))
 (=> $x4088 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 213) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 214) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4102 (= ?x60 213)))
 (let (($x4107 (and $x4102 $x77)))
 (=> $x4107 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 214) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 215) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4121 (= ?x60 214)))
 (let (($x4126 (and $x4121 $x77)))
 (=> $x4126 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 215) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 216) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4140 (= ?x60 215)))
 (let (($x4145 (and $x4140 $x77)))
 (=> $x4145 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 216) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 217) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4159 (= ?x60 216)))
 (let (($x4164 (and $x4159 $x77)))
 (=> $x4164 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 217) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 218) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4178 (= ?x60 217)))
 (let (($x4183 (and $x4178 $x77)))
 (=> $x4183 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 218) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 219) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4197 (= ?x60 218)))
 (let (($x4202 (and $x4197 $x77)))
 (=> $x4202 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 219) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 220) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4216 (= ?x60 219)))
 (let (($x4221 (and $x4216 $x77)))
 (=> $x4221 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 220) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 221) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4235 (= ?x60 220)))
 (let (($x4240 (and $x4235 $x77)))
 (=> $x4240 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 221) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 222) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4254 (= ?x60 221)))
 (let (($x4259 (and $x4254 $x77)))
 (=> $x4259 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 222) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 223) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4273 (= ?x60 222)))
 (let (($x4278 (and $x4273 $x77)))
 (=> $x4278 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 223) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 224) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4292 (= ?x60 223)))
 (let (($x4297 (and $x4292 $x77)))
 (=> $x4297 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 224) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 225) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4311 (= ?x60 224)))
 (let (($x4316 (and $x4311 $x77)))
 (=> $x4316 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 225) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 226) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4330 (= ?x60 225)))
 (let (($x4335 (and $x4330 $x77)))
 (=> $x4335 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 226) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 227) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4349 (= ?x60 226)))
 (let (($x4354 (and $x4349 $x77)))
 (=> $x4354 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 227) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 228) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4368 (= ?x60 227)))
 (let (($x4373 (and $x4368 $x77)))
 (=> $x4373 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 228) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 229) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4387 (= ?x60 228)))
 (let (($x4392 (and $x4387 $x77)))
 (=> $x4392 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 229) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 230) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4406 (= ?x60 229)))
 (let (($x4411 (and $x4406 $x77)))
 (=> $x4411 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 230) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 231) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4425 (= ?x60 230)))
 (let (($x4430 (and $x4425 $x77)))
 (=> $x4430 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 231) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 232) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4444 (= ?x60 231)))
 (let (($x4449 (and $x4444 $x77)))
 (=> $x4449 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 232) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 233) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4463 (= ?x60 232)))
 (let (($x4468 (and $x4463 $x77)))
 (=> $x4468 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 233) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 234) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4482 (= ?x60 233)))
 (let (($x4487 (and $x4482 $x77)))
 (=> $x4487 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 234) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 235) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4501 (= ?x60 234)))
 (let (($x4506 (and $x4501 $x77)))
 (=> $x4506 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 235) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 236) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4520 (= ?x60 235)))
 (let (($x4525 (and $x4520 $x77)))
 (=> $x4525 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 236) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 237) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4539 (= ?x60 236)))
 (let (($x4544 (and $x4539 $x77)))
 (=> $x4544 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 237) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 238) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4558 (= ?x60 237)))
 (let (($x4563 (and $x4558 $x77)))
 (=> $x4563 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 238) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 239) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4577 (= ?x60 238)))
 (let (($x4582 (and $x4577 $x77)))
 (=> $x4582 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 239) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 240) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4596 (= ?x60 239)))
 (let (($x4601 (and $x4596 $x77)))
 (=> $x4601 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 240) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 241) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4615 (= ?x60 240)))
 (let (($x4620 (and $x4615 $x77)))
 (=> $x4620 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 241) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 242) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4634 (= ?x60 241)))
 (let (($x4639 (and $x4634 $x77)))
 (=> $x4639 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 242) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 243) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4653 (= ?x60 242)))
 (let (($x4658 (and $x4653 $x77)))
 (=> $x4658 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 243) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 244) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4672 (= ?x60 243)))
 (let (($x4677 (and $x4672 $x77)))
 (=> $x4677 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 244) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 245) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4691 (= ?x60 244)))
 (let (($x4696 (and $x4691 $x77)))
 (=> $x4696 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 245) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 246) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4710 (= ?x60 245)))
 (let (($x4715 (and $x4710 $x77)))
 (=> $x4715 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 246) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 247) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4729 (= ?x60 246)))
 (let (($x4734 (and $x4729 $x77)))
 (=> $x4734 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 247) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 248) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4748 (= ?x60 247)))
 (let (($x4753 (and $x4748 $x77)))
 (=> $x4753 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 248) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 249) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4767 (= ?x60 248)))
 (let (($x4772 (and $x4767 $x77)))
 (=> $x4772 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 249) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 250) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4786 (= ?x60 249)))
 (let (($x4791 (and $x4786 $x77)))
 (=> $x4791 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 250) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 251) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4805 (= ?x60 250)))
 (let (($x4810 (and $x4805 $x77)))
 (=> $x4810 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 251) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 252) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4824 (= ?x60 251)))
 (let (($x4829 (and $x4824 $x77)))
 (=> $x4829 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 252) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 253) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4843 (= ?x60 252)))
 (let (($x4848 (and $x4843 $x77)))
 (=> $x4848 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 253) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 254) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4862 (= ?x60 253)))
 (let (($x4867 (and $x4862 $x77)))
 (=> $x4867 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 254) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 255) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4881 (= ?x60 254)))
 (let (($x4886 (and $x4881 $x77)))
 (=> $x4886 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 255) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 256) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4900 (= ?x60 255)))
 (let (($x4905 (and $x4900 $x77)))
 (=> $x4905 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 256) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 257) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4919 (= ?x60 256)))
 (let (($x4924 (and $x4919 $x77)))
 (=> $x4924 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 257) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 258) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4938 (= ?x60 257)))
 (let (($x4943 (and $x4938 $x77)))
 (=> $x4943 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 258) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 259) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4957 (= ?x60 258)))
 (let (($x4962 (and $x4957 $x77)))
 (=> $x4962 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 259) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 260) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4976 (= ?x60 259)))
 (let (($x4981 (and $x4976 $x77)))
 (=> $x4981 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 260) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 261) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x4995 (= ?x60 260)))
 (let (($x5000 (and $x4995 $x77)))
 (=> $x5000 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 261) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 262) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5014 (= ?x60 261)))
 (let (($x5019 (and $x5014 $x77)))
 (=> $x5019 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 262) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 263) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5033 (= ?x60 262)))
 (let (($x5038 (and $x5033 $x77)))
 (=> $x5038 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 263) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 264) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5052 (= ?x60 263)))
 (let (($x5057 (and $x5052 $x77)))
 (=> $x5057 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 264) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 265) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5071 (= ?x60 264)))
 (let (($x5076 (and $x5071 $x77)))
 (=> $x5076 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 265) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 266) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5090 (= ?x60 265)))
 (let (($x5095 (and $x5090 $x77)))
 (=> $x5095 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 266) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 267) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5109 (= ?x60 266)))
 (let (($x5114 (and $x5109 $x77)))
 (=> $x5114 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 267) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 268) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5128 (= ?x60 267)))
 (let (($x5133 (and $x5128 $x77)))
 (=> $x5133 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 268) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 269) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5147 (= ?x60 268)))
 (let (($x5152 (and $x5147 $x77)))
 (=> $x5152 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 269) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 270) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5166 (= ?x60 269)))
 (let (($x5171 (and $x5166 $x77)))
 (=> $x5171 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 270) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 271) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5185 (= ?x60 270)))
 (let (($x5190 (and $x5185 $x77)))
 (=> $x5190 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 271) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 272) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5204 (= ?x60 271)))
 (let (($x5209 (and $x5204 $x77)))
 (=> $x5209 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 272) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 273) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5223 (= ?x60 272)))
 (let (($x5228 (and $x5223 $x77)))
 (=> $x5228 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 273) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 274) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5242 (= ?x60 273)))
 (let (($x5247 (and $x5242 $x77)))
 (=> $x5247 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 274) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 275) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5261 (= ?x60 274)))
 (let (($x5266 (and $x5261 $x77)))
 (=> $x5266 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 275) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 276) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5280 (= ?x60 275)))
 (let (($x5285 (and $x5280 $x77)))
 (=> $x5285 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 276) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 277) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5299 (= ?x60 276)))
 (let (($x5304 (and $x5299 $x77)))
 (=> $x5304 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 277) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 278) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5318 (= ?x60 277)))
 (let (($x5323 (and $x5318 $x77)))
 (=> $x5323 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 278) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 279) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5337 (= ?x60 278)))
 (let (($x5342 (and $x5337 $x77)))
 (=> $x5342 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 279) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 280) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5356 (= ?x60 279)))
 (let (($x5361 (and $x5356 $x77)))
 (=> $x5361 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 280) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 281) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5375 (= ?x60 280)))
 (let (($x5380 (and $x5375 $x77)))
 (=> $x5380 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 281) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 282) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5394 (= ?x60 281)))
 (let (($x5399 (and $x5394 $x77)))
 (=> $x5399 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 282) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 283) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5413 (= ?x60 282)))
 (let (($x5418 (and $x5413 $x77)))
 (=> $x5418 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 283) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 284) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5432 (= ?x60 283)))
 (let (($x5437 (and $x5432 $x77)))
 (=> $x5437 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 284) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 285) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5451 (= ?x60 284)))
 (let (($x5456 (and $x5451 $x77)))
 (=> $x5456 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 285) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 286) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5470 (= ?x60 285)))
 (let (($x5475 (and $x5470 $x77)))
 (=> $x5475 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 286) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 287) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5489 (= ?x60 286)))
 (let (($x5494 (and $x5489 $x77)))
 (=> $x5494 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 287) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 288) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5508 (= ?x60 287)))
 (let (($x5513 (and $x5508 $x77)))
 (=> $x5513 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 288) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 289) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5527 (= ?x60 288)))
 (let (($x5532 (and $x5527 $x77)))
 (=> $x5532 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 289) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 290) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5546 (= ?x60 289)))
 (let (($x5551 (and $x5546 $x77)))
 (=> $x5551 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 290) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 291) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5565 (= ?x60 290)))
 (let (($x5570 (and $x5565 $x77)))
 (=> $x5570 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 291) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 292) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5584 (= ?x60 291)))
 (let (($x5589 (and $x5584 $x77)))
 (=> $x5589 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 292) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 293) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5603 (= ?x60 292)))
 (let (($x5608 (and $x5603 $x77)))
 (=> $x5608 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 293) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 294) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5622 (= ?x60 293)))
 (let (($x5627 (and $x5622 $x77)))
 (=> $x5627 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 294) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 295) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5641 (= ?x60 294)))
 (let (($x5646 (and $x5641 $x77)))
 (=> $x5646 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 295) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 296) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5660 (= ?x60 295)))
 (let (($x5665 (and $x5660 $x77)))
 (=> $x5665 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 296) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 297) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5679 (= ?x60 296)))
 (let (($x5684 (and $x5679 $x77)))
 (=> $x5684 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 297) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 298) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5698 (= ?x60 297)))
 (let (($x5703 (and $x5698 $x77)))
 (=> $x5703 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 298) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 299) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5717 (= ?x60 298)))
 (let (($x5722 (and $x5717 $x77)))
 (=> $x5722 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 299) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 300) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5736 (= ?x60 299)))
 (let (($x5741 (and $x5736 $x77)))
 (=> $x5741 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 300) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 301) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5755 (= ?x60 300)))
 (let (($x5760 (and $x5755 $x77)))
 (=> $x5760 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 301) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 302) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5774 (= ?x60 301)))
 (let (($x5779 (and $x5774 $x77)))
 (=> $x5779 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 302) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 303) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5793 (= ?x60 302)))
 (let (($x5798 (and $x5793 $x77)))
 (=> $x5798 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 303) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 304) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5812 (= ?x60 303)))
 (let (($x5817 (and $x5812 $x77)))
 (=> $x5817 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 304) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 305) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5831 (= ?x60 304)))
 (let (($x5836 (and $x5831 $x77)))
 (=> $x5836 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 305) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 306) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5850 (= ?x60 305)))
 (let (($x5855 (and $x5850 $x77)))
 (=> $x5855 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 306) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 307) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5869 (= ?x60 306)))
 (let (($x5874 (and $x5869 $x77)))
 (=> $x5874 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 307) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 308) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5888 (= ?x60 307)))
 (let (($x5893 (and $x5888 $x77)))
 (=> $x5893 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 308) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 309) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5907 (= ?x60 308)))
 (let (($x5912 (and $x5907 $x77)))
 (=> $x5912 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 309) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 310) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5926 (= ?x60 309)))
 (let (($x5931 (and $x5926 $x77)))
 (=> $x5931 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 310) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 311) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5945 (= ?x60 310)))
 (let (($x5950 (and $x5945 $x77)))
 (=> $x5950 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 311) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 312) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5964 (= ?x60 311)))
 (let (($x5969 (and $x5964 $x77)))
 (=> $x5969 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 312) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 313) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x5983 (= ?x60 312)))
 (let (($x5988 (and $x5983 $x77)))
 (=> $x5988 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 313) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 314) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6002 (= ?x60 313)))
 (let (($x6007 (and $x6002 $x77)))
 (=> $x6007 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 314) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 315) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6021 (= ?x60 314)))
 (let (($x6026 (and $x6021 $x77)))
 (=> $x6026 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 315) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 316) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6040 (= ?x60 315)))
 (let (($x6045 (and $x6040 $x77)))
 (=> $x6045 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 316) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 317) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6059 (= ?x60 316)))
 (let (($x6064 (and $x6059 $x77)))
 (=> $x6064 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 317) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 318) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6078 (= ?x60 317)))
 (let (($x6083 (and $x6078 $x77)))
 (=> $x6083 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 318) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 319) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6097 (= ?x60 318)))
 (let (($x6102 (and $x6097 $x77)))
 (=> $x6102 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 319) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 320) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6116 (= ?x60 319)))
 (let (($x6121 (and $x6116 $x77)))
 (=> $x6121 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 320) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 321) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6135 (= ?x60 320)))
 (let (($x6140 (and $x6135 $x77)))
 (=> $x6140 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 321) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 322) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6154 (= ?x60 321)))
 (let (($x6159 (and $x6154 $x77)))
 (=> $x6159 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 322) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 323) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6173 (= ?x60 322)))
 (let (($x6178 (and $x6173 $x77)))
 (=> $x6178 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 323) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 324) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6192 (= ?x60 323)))
 (let (($x6197 (and $x6192 $x77)))
 (=> $x6197 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 324) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 325) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6211 (= ?x60 324)))
 (let (($x6216 (and $x6211 $x77)))
 (=> $x6216 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 325) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 326) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6230 (= ?x60 325)))
 (let (($x6235 (and $x6230 $x77)))
 (=> $x6235 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 326) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 327) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6249 (= ?x60 326)))
 (let (($x6254 (and $x6249 $x77)))
 (=> $x6254 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 327) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 328) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6268 (= ?x60 327)))
 (let (($x6273 (and $x6268 $x77)))
 (=> $x6273 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 328) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 329) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6287 (= ?x60 328)))
 (let (($x6292 (and $x6287 $x77)))
 (=> $x6292 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 329) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 330) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6306 (= ?x60 329)))
 (let (($x6311 (and $x6306 $x77)))
 (=> $x6311 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 330) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 331) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6325 (= ?x60 330)))
 (let (($x6330 (and $x6325 $x77)))
 (=> $x6330 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 331) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 332) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6344 (= ?x60 331)))
 (let (($x6349 (and $x6344 $x77)))
 (=> $x6349 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 332) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 333) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6363 (= ?x60 332)))
 (let (($x6368 (and $x6363 $x77)))
 (=> $x6368 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 333) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 334) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6382 (= ?x60 333)))
 (let (($x6387 (and $x6382 $x77)))
 (=> $x6387 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 334) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 335) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6401 (= ?x60 334)))
 (let (($x6406 (and $x6401 $x77)))
 (=> $x6406 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 335) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 336) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6420 (= ?x60 335)))
 (let (($x6425 (and $x6420 $x77)))
 (=> $x6425 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 336) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 337) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6439 (= ?x60 336)))
 (let (($x6444 (and $x6439 $x77)))
 (=> $x6444 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 337) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 338) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6458 (= ?x60 337)))
 (let (($x6463 (and $x6458 $x77)))
 (=> $x6463 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 338) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 339) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6477 (= ?x60 338)))
 (let (($x6482 (and $x6477 $x77)))
 (=> $x6482 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 339) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 340) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6496 (= ?x60 339)))
 (let (($x6501 (and $x6496 $x77)))
 (=> $x6501 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 340) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 341) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6515 (= ?x60 340)))
 (let (($x6520 (and $x6515 $x77)))
 (=> $x6520 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 341) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 342) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6534 (= ?x60 341)))
 (let (($x6539 (and $x6534 $x77)))
 (=> $x6539 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 342) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 343) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6553 (= ?x60 342)))
 (let (($x6558 (and $x6553 $x77)))
 (=> $x6558 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 343) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 344) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6572 (= ?x60 343)))
 (let (($x6577 (and $x6572 $x77)))
 (=> $x6577 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 344) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 345) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6591 (= ?x60 344)))
 (let (($x6596 (and $x6591 $x77)))
 (=> $x6596 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 345) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 346) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6610 (= ?x60 345)))
 (let (($x6615 (and $x6610 $x77)))
 (=> $x6615 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 346) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 347) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6629 (= ?x60 346)))
 (let (($x6634 (and $x6629 $x77)))
 (=> $x6634 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 347) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 348) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6648 (= ?x60 347)))
 (let (($x6653 (and $x6648 $x77)))
 (=> $x6653 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 348) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 349) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6667 (= ?x60 348)))
 (let (($x6672 (and $x6667 $x77)))
 (=> $x6672 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 349) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 350) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6686 (= ?x60 349)))
 (let (($x6691 (and $x6686 $x77)))
 (=> $x6691 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 350) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 351) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6705 (= ?x60 350)))
 (let (($x6710 (and $x6705 $x77)))
 (=> $x6710 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 351) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 352) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6724 (= ?x60 351)))
 (let (($x6729 (and $x6724 $x77)))
 (=> $x6729 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 352) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 353) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6743 (= ?x60 352)))
 (let (($x6748 (and $x6743 $x77)))
 (=> $x6748 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 353) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 354) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6762 (= ?x60 353)))
 (let (($x6767 (and $x6762 $x77)))
 (=> $x6767 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 354) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 355) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6781 (= ?x60 354)))
 (let (($x6786 (and $x6781 $x77)))
 (=> $x6786 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 355) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 356) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6800 (= ?x60 355)))
 (let (($x6805 (and $x6800 $x77)))
 (=> $x6805 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 356) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 357) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6819 (= ?x60 356)))
 (let (($x6824 (and $x6819 $x77)))
 (=> $x6824 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 357) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 358) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6838 (= ?x60 357)))
 (let (($x6843 (and $x6838 $x77)))
 (=> $x6843 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 358) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 359) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6857 (= ?x60 358)))
 (let (($x6862 (and $x6857 $x77)))
 (=> $x6862 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 359) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 360) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6876 (= ?x60 359)))
 (let (($x6881 (and $x6876 $x77)))
 (=> $x6881 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 360) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 361) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6895 (= ?x60 360)))
 (let (($x6900 (and $x6895 $x77)))
 (=> $x6900 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 361) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 362) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6914 (= ?x60 361)))
 (let (($x6919 (and $x6914 $x77)))
 (=> $x6919 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 362) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 363) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6933 (= ?x60 362)))
 (let (($x6938 (and $x6933 $x77)))
 (=> $x6938 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 363) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 364) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6952 (= ?x60 363)))
 (let (($x6957 (and $x6952 $x77)))
 (=> $x6957 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 364) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 365) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6971 (= ?x60 364)))
 (let (($x6976 (and $x6971 $x77)))
 (=> $x6976 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 365) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 366) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x6990 (= ?x60 365)))
 (let (($x6995 (and $x6990 $x77)))
 (=> $x6995 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 366) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 367) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7009 (= ?x60 366)))
 (let (($x7014 (and $x7009 $x77)))
 (=> $x7014 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 367) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 368) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7028 (= ?x60 367)))
 (let (($x7033 (and $x7028 $x77)))
 (=> $x7033 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 368) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 369) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7047 (= ?x60 368)))
 (let (($x7052 (and $x7047 $x77)))
 (=> $x7052 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 369) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 370) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7066 (= ?x60 369)))
 (let (($x7071 (and $x7066 $x77)))
 (=> $x7071 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 370) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 371) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7085 (= ?x60 370)))
 (let (($x7090 (and $x7085 $x77)))
 (=> $x7090 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 371) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 372) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7104 (= ?x60 371)))
 (let (($x7109 (and $x7104 $x77)))
 (=> $x7109 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 372) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 373) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7123 (= ?x60 372)))
 (let (($x7128 (and $x7123 $x77)))
 (=> $x7128 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 373) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 374) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7142 (= ?x60 373)))
 (let (($x7147 (and $x7142 $x77)))
 (=> $x7147 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 374) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 375) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7161 (= ?x60 374)))
 (let (($x7166 (and $x7161 $x77)))
 (=> $x7166 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 375) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 376) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7180 (= ?x60 375)))
 (let (($x7185 (and $x7180 $x77)))
 (=> $x7185 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 376) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 377) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7199 (= ?x60 376)))
 (let (($x7204 (and $x7199 $x77)))
 (=> $x7204 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 377) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 378) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7218 (= ?x60 377)))
 (let (($x7223 (and $x7218 $x77)))
 (=> $x7223 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 378) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 379) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7237 (= ?x60 378)))
 (let (($x7242 (and $x7237 $x77)))
 (=> $x7242 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 379) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 380) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7256 (= ?x60 379)))
 (let (($x7261 (and $x7256 $x77)))
 (=> $x7261 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 380) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 381) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7275 (= ?x60 380)))
 (let (($x7280 (and $x7275 $x77)))
 (=> $x7280 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 381) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 382) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7294 (= ?x60 381)))
 (let (($x7299 (and $x7294 $x77)))
 (=> $x7299 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 382) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 383) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7313 (= ?x60 382)))
 (let (($x7318 (and $x7313 $x77)))
 (=> $x7318 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 383) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 384) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7332 (= ?x60 383)))
 (let (($x7337 (and $x7332 $x77)))
 (=> $x7337 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 384) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 385) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7351 (= ?x60 384)))
 (let (($x7356 (and $x7351 $x77)))
 (=> $x7356 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 385) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 386) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7370 (= ?x60 385)))
 (let (($x7375 (and $x7370 $x77)))
 (=> $x7375 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 386) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 387) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7389 (= ?x60 386)))
 (let (($x7394 (and $x7389 $x77)))
 (=> $x7394 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 387) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 388) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7408 (= ?x60 387)))
 (let (($x7413 (and $x7408 $x77)))
 (=> $x7413 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 388) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 389) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7427 (= ?x60 388)))
 (let (($x7432 (and $x7427 $x77)))
 (=> $x7432 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 389) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 390) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7446 (= ?x60 389)))
 (let (($x7451 (and $x7446 $x77)))
 (=> $x7451 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 390) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 391) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7465 (= ?x60 390)))
 (let (($x7470 (and $x7465 $x77)))
 (=> $x7470 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 391) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 392) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7484 (= ?x60 391)))
 (let (($x7489 (and $x7484 $x77)))
 (=> $x7489 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 392) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 393) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7503 (= ?x60 392)))
 (let (($x7508 (and $x7503 $x77)))
 (=> $x7508 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 393) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 394) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7522 (= ?x60 393)))
 (let (($x7527 (and $x7522 $x77)))
 (=> $x7527 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 394) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 395) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7541 (= ?x60 394)))
 (let (($x7546 (and $x7541 $x77)))
 (=> $x7546 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 395) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 396) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7560 (= ?x60 395)))
 (let (($x7565 (and $x7560 $x77)))
 (=> $x7565 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 396) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 397) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7579 (= ?x60 396)))
 (let (($x7584 (and $x7579 $x77)))
 (=> $x7584 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 397) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 398) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7598 (= ?x60 397)))
 (let (($x7603 (and $x7598 $x77)))
 (=> $x7603 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 398) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 399) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7617 (= ?x60 398)))
 (let (($x7622 (and $x7617 $x77)))
 (=> $x7622 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 399) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 400) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7636 (= ?x60 399)))
 (let (($x7641 (and $x7636 $x77)))
 (=> $x7641 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 400) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 401) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7655 (= ?x60 400)))
 (let (($x7660 (and $x7655 $x77)))
 (=> $x7660 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 401) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 402) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7674 (= ?x60 401)))
 (let (($x7679 (and $x7674 $x77)))
 (=> $x7679 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 402) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 403) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7693 (= ?x60 402)))
 (let (($x7698 (and $x7693 $x77)))
 (=> $x7698 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 403) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 404) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7712 (= ?x60 403)))
 (let (($x7717 (and $x7712 $x77)))
 (=> $x7717 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 404) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 405) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7731 (= ?x60 404)))
 (let (($x7736 (and $x7731 $x77)))
 (=> $x7736 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 405) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 406) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7750 (= ?x60 405)))
 (let (($x7755 (and $x7750 $x77)))
 (=> $x7755 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 406) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 407) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7769 (= ?x60 406)))
 (let (($x7774 (and $x7769 $x77)))
 (=> $x7774 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 407) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 408) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7788 (= ?x60 407)))
 (let (($x7793 (and $x7788 $x77)))
 (=> $x7793 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 408) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 409) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7807 (= ?x60 408)))
 (let (($x7812 (and $x7807 $x77)))
 (=> $x7812 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 409) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 410) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7826 (= ?x60 409)))
 (let (($x7831 (and $x7826 $x77)))
 (=> $x7831 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 410) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 411) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7845 (= ?x60 410)))
 (let (($x7850 (and $x7845 $x77)))
 (=> $x7850 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 411) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 412) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7864 (= ?x60 411)))
 (let (($x7869 (and $x7864 $x77)))
 (=> $x7869 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 412) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 413) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7883 (= ?x60 412)))
 (let (($x7888 (and $x7883 $x77)))
 (=> $x7888 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 413) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 414) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7902 (= ?x60 413)))
 (let (($x7907 (and $x7902 $x77)))
 (=> $x7907 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 414) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 415) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7921 (= ?x60 414)))
 (let (($x7926 (and $x7921 $x77)))
 (=> $x7926 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 415) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 416) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7940 (= ?x60 415)))
 (let (($x7945 (and $x7940 $x77)))
 (=> $x7945 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 416) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 417) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7959 (= ?x60 416)))
 (let (($x7964 (and $x7959 $x77)))
 (=> $x7964 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 417) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 418) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7978 (= ?x60 417)))
 (let (($x7983 (and $x7978 $x77)))
 (=> $x7983 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 418) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 419) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x7997 (= ?x60 418)))
 (let (($x8002 (and $x7997 $x77)))
 (=> $x8002 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 419) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 420) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8016 (= ?x60 419)))
 (let (($x8021 (and $x8016 $x77)))
 (=> $x8021 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 420) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 421) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8035 (= ?x60 420)))
 (let (($x8040 (and $x8035 $x77)))
 (=> $x8040 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 421) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 422) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8054 (= ?x60 421)))
 (let (($x8059 (and $x8054 $x77)))
 (=> $x8059 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 422) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 423) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8073 (= ?x60 422)))
 (let (($x8078 (and $x8073 $x77)))
 (=> $x8078 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 423) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 424) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8092 (= ?x60 423)))
 (let (($x8097 (and $x8092 $x77)))
 (=> $x8097 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 424) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 425) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8111 (= ?x60 424)))
 (let (($x8116 (and $x8111 $x77)))
 (=> $x8116 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 425) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 426) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8130 (= ?x60 425)))
 (let (($x8135 (and $x8130 $x77)))
 (=> $x8135 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 426) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 427) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8149 (= ?x60 426)))
 (let (($x8154 (and $x8149 $x77)))
 (=> $x8154 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 427) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 428) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8168 (= ?x60 427)))
 (let (($x8173 (and $x8168 $x77)))
 (=> $x8173 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 428) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 429) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8187 (= ?x60 428)))
 (let (($x8192 (and $x8187 $x77)))
 (=> $x8192 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 429) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 430) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8206 (= ?x60 429)))
 (let (($x8211 (and $x8206 $x77)))
 (=> $x8211 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 430) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 431) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8225 (= ?x60 430)))
 (let (($x8230 (and $x8225 $x77)))
 (=> $x8230 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 431) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 432) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8244 (= ?x60 431)))
 (let (($x8249 (and $x8244 $x77)))
 (=> $x8249 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 432) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 433) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8263 (= ?x60 432)))
 (let (($x8268 (and $x8263 $x77)))
 (=> $x8268 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 433) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 434) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8282 (= ?x60 433)))
 (let (($x8287 (and $x8282 $x77)))
 (=> $x8287 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 434) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 435) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8301 (= ?x60 434)))
 (let (($x8306 (and $x8301 $x77)))
 (=> $x8306 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 435) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 436) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8320 (= ?x60 435)))
 (let (($x8325 (and $x8320 $x77)))
 (=> $x8325 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 436) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 437) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8339 (= ?x60 436)))
 (let (($x8344 (and $x8339 $x77)))
 (=> $x8344 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 437) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 438) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8358 (= ?x60 437)))
 (let (($x8363 (and $x8358 $x77)))
 (=> $x8363 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 438) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 439) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8377 (= ?x60 438)))
 (let (($x8382 (and $x8377 $x77)))
 (=> $x8382 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 439) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 440) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8396 (= ?x60 439)))
 (let (($x8401 (and $x8396 $x77)))
 (=> $x8401 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 440) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 441) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8415 (= ?x60 440)))
 (let (($x8420 (and $x8415 $x77)))
 (=> $x8420 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 441) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 442) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8434 (= ?x60 441)))
 (let (($x8439 (and $x8434 $x77)))
 (=> $x8439 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 442) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 443) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8453 (= ?x60 442)))
 (let (($x8458 (and $x8453 $x77)))
 (=> $x8458 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 443) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 444) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8472 (= ?x60 443)))
 (let (($x8477 (and $x8472 $x77)))
 (=> $x8477 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 444) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 445) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8491 (= ?x60 444)))
 (let (($x8496 (and $x8491 $x77)))
 (=> $x8496 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 445) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 446) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8510 (= ?x60 445)))
 (let (($x8515 (and $x8510 $x77)))
 (=> $x8515 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 446) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 447) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8529 (= ?x60 446)))
 (let (($x8534 (and $x8529 $x77)))
 (=> $x8534 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 447) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 448) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8548 (= ?x60 447)))
 (let (($x8553 (and $x8548 $x77)))
 (=> $x8553 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 448) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 449) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8567 (= ?x60 448)))
 (let (($x8572 (and $x8567 $x77)))
 (=> $x8572 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 449) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 450) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8586 (= ?x60 449)))
 (let (($x8591 (and $x8586 $x77)))
 (=> $x8591 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 450) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 451) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8605 (= ?x60 450)))
 (let (($x8610 (and $x8605 $x77)))
 (=> $x8610 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 451) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 452) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8624 (= ?x60 451)))
 (let (($x8629 (and $x8624 $x77)))
 (=> $x8629 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 452) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 453) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8643 (= ?x60 452)))
 (let (($x8648 (and $x8643 $x77)))
 (=> $x8648 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 453) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 454) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8662 (= ?x60 453)))
 (let (($x8667 (and $x8662 $x77)))
 (=> $x8667 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 454) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 455) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8681 (= ?x60 454)))
 (let (($x8686 (and $x8681 $x77)))
 (=> $x8686 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 455) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 456) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8700 (= ?x60 455)))
 (let (($x8705 (and $x8700 $x77)))
 (=> $x8705 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 456) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 457) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8719 (= ?x60 456)))
 (let (($x8724 (and $x8719 $x77)))
 (=> $x8724 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 457) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 458) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8738 (= ?x60 457)))
 (let (($x8743 (and $x8738 $x77)))
 (=> $x8743 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 458) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 459) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8757 (= ?x60 458)))
 (let (($x8762 (and $x8757 $x77)))
 (=> $x8762 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 459) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 460) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8776 (= ?x60 459)))
 (let (($x8781 (and $x8776 $x77)))
 (=> $x8781 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 460) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 461) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8795 (= ?x60 460)))
 (let (($x8800 (and $x8795 $x77)))
 (=> $x8800 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 461) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 462) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8814 (= ?x60 461)))
 (let (($x8819 (and $x8814 $x77)))
 (=> $x8819 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 462) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 463) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8833 (= ?x60 462)))
 (let (($x8838 (and $x8833 $x77)))
 (=> $x8838 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 463) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 464) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8852 (= ?x60 463)))
 (let (($x8857 (and $x8852 $x77)))
 (=> $x8857 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 464) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 465) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8871 (= ?x60 464)))
 (let (($x8876 (and $x8871 $x77)))
 (=> $x8876 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 465) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 466) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8890 (= ?x60 465)))
 (let (($x8895 (and $x8890 $x77)))
 (=> $x8895 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 466) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 467) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8909 (= ?x60 466)))
 (let (($x8914 (and $x8909 $x77)))
 (=> $x8914 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 467) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 468) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8928 (= ?x60 467)))
 (let (($x8933 (and $x8928 $x77)))
 (=> $x8933 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 468) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 469) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8947 (= ?x60 468)))
 (let (($x8952 (and $x8947 $x77)))
 (=> $x8952 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 469) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 470) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8966 (= ?x60 469)))
 (let (($x8971 (and $x8966 $x77)))
 (=> $x8971 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 470) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 471) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x8985 (= ?x60 470)))
 (let (($x8990 (and $x8985 $x77)))
 (=> $x8990 $x76))))))))))
 )
(assert
 (forall ((time Int) )(exists ((time Int) )(and (and (>= time 0) (< time 941)) (and (distinct (= (time-to-state time) 470) (= (input-arg0 time) 469)) true)))
 )
 )
(check-sat)

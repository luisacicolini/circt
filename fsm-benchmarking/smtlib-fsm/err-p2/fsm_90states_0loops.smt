; 
(set-info :status unknown)
(declare-fun var1_0 (Int) Int)
(declare-fun input-arg0 (Int) Int)
(declare-fun time-to-state (Int) Int)
(assert
 (let (($x14 (= (var1_0 0) 0)))
 (let (($x11 (= (input-arg0 0) 0)))
 (let (($x9 (= (time-to-state 0) 0)))
 (let (($x12 (and $x9 $x11)))
 (and $x12 $x14))))))
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 0) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 1) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x61 (= ?x60 0)))
 (let (($x78 (and $x61 $x77)))
 (=> $x78 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 1) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 3) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x93 (= ?x60 1)))
 (let (($x98 (and $x93 $x77)))
 (=> $x98 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 3) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 4) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x112 (= ?x60 3)))
 (let (($x117 (and $x112 $x77)))
 (=> $x117 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 4) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 5) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x131 (= ?x60 4)))
 (let (($x136 (and $x131 $x77)))
 (=> $x136 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 5) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 6) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x150 (= ?x60 5)))
 (let (($x155 (and $x150 $x77)))
 (=> $x155 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 6) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 7) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x169 (= ?x60 6)))
 (let (($x174 (and $x169 $x77)))
 (=> $x174 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 7) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 8) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x188 (= ?x60 7)))
 (let (($x193 (and $x188 $x77)))
 (=> $x193 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 8) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 9) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x207 (= ?x60 8)))
 (let (($x212 (and $x207 $x77)))
 (=> $x212 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 9) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 10) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x226 (= ?x60 9)))
 (let (($x231 (and $x226 $x77)))
 (=> $x231 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 10) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 11) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x245 (= ?x60 10)))
 (let (($x250 (and $x245 $x77)))
 (=> $x250 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 11) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 12) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x264 (= ?x60 11)))
 (let (($x269 (and $x264 $x77)))
 (=> $x269 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 12) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 13) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x283 (= ?x60 12)))
 (let (($x288 (and $x283 $x77)))
 (=> $x288 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 13) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 14) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x302 (= ?x60 13)))
 (let (($x307 (and $x302 $x77)))
 (=> $x307 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 14) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 15) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x321 (= ?x60 14)))
 (let (($x326 (and $x321 $x77)))
 (=> $x326 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 15) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 16) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x340 (= ?x60 15)))
 (let (($x345 (and $x340 $x77)))
 (=> $x345 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 16) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 17) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x359 (= ?x60 16)))
 (let (($x364 (and $x359 $x77)))
 (=> $x364 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 17) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 18) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x378 (= ?x60 17)))
 (let (($x383 (and $x378 $x77)))
 (=> $x383 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 18) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 19) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x397 (= ?x60 18)))
 (let (($x402 (and $x397 $x77)))
 (=> $x402 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 19) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 20) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x416 (= ?x60 19)))
 (let (($x421 (and $x416 $x77)))
 (=> $x421 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 20) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 21) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x435 (= ?x60 20)))
 (let (($x440 (and $x435 $x77)))
 (=> $x440 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 21) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 22) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x454 (= ?x60 21)))
 (let (($x459 (and $x454 $x77)))
 (=> $x459 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 22) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 23) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x473 (= ?x60 22)))
 (let (($x478 (and $x473 $x77)))
 (=> $x478 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 23) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 24) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x492 (= ?x60 23)))
 (let (($x497 (and $x492 $x77)))
 (=> $x497 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 24) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 25) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x511 (= ?x60 24)))
 (let (($x516 (and $x511 $x77)))
 (=> $x516 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 25) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 26) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x530 (= ?x60 25)))
 (let (($x535 (and $x530 $x77)))
 (=> $x535 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 26) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 27) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x549 (= ?x60 26)))
 (let (($x554 (and $x549 $x77)))
 (=> $x554 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 27) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 28) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x568 (= ?x60 27)))
 (let (($x573 (and $x568 $x77)))
 (=> $x573 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 28) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 29) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x587 (= ?x60 28)))
 (let (($x592 (and $x587 $x77)))
 (=> $x592 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 29) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 30) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x606 (= ?x60 29)))
 (let (($x611 (and $x606 $x77)))
 (=> $x611 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 30) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 31) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x625 (= ?x60 30)))
 (let (($x630 (and $x625 $x77)))
 (=> $x630 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 31) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 32) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x644 (= ?x60 31)))
 (let (($x649 (and $x644 $x77)))
 (=> $x649 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 32) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 33) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x663 (= ?x60 32)))
 (let (($x668 (and $x663 $x77)))
 (=> $x668 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 33) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 34) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x682 (= ?x60 33)))
 (let (($x687 (and $x682 $x77)))
 (=> $x687 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 34) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 35) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x701 (= ?x60 34)))
 (let (($x706 (and $x701 $x77)))
 (=> $x706 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 35) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 36) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x720 (= ?x60 35)))
 (let (($x725 (and $x720 $x77)))
 (=> $x725 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 36) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 37) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x739 (= ?x60 36)))
 (let (($x744 (and $x739 $x77)))
 (=> $x744 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 37) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 38) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x758 (= ?x60 37)))
 (let (($x763 (and $x758 $x77)))
 (=> $x763 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 38) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 39) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x777 (= ?x60 38)))
 (let (($x782 (and $x777 $x77)))
 (=> $x782 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 39) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 40) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x796 (= ?x60 39)))
 (let (($x801 (and $x796 $x77)))
 (=> $x801 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 40) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 41) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x815 (= ?x60 40)))
 (let (($x820 (and $x815 $x77)))
 (=> $x820 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 41) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 42) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x834 (= ?x60 41)))
 (let (($x839 (and $x834 $x77)))
 (=> $x839 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 42) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 43) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x853 (= ?x60 42)))
 (let (($x858 (and $x853 $x77)))
 (=> $x858 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 43) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 44) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x872 (= ?x60 43)))
 (let (($x877 (and $x872 $x77)))
 (=> $x877 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 44) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 45) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x891 (= ?x60 44)))
 (let (($x896 (and $x891 $x77)))
 (=> $x896 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 45) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 46) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x910 (= ?x60 45)))
 (let (($x915 (and $x910 $x77)))
 (=> $x915 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 46) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 47) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x929 (= ?x60 46)))
 (let (($x934 (and $x929 $x77)))
 (=> $x934 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 47) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 48) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x948 (= ?x60 47)))
 (let (($x953 (and $x948 $x77)))
 (=> $x953 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 48) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 49) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x967 (= ?x60 48)))
 (let (($x972 (and $x967 $x77)))
 (=> $x972 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 49) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 50) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x986 (= ?x60 49)))
 (let (($x991 (and $x986 $x77)))
 (=> $x991 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 50) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 51) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1005 (= ?x60 50)))
 (let (($x1010 (and $x1005 $x77)))
 (=> $x1010 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 51) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 52) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1024 (= ?x60 51)))
 (let (($x1029 (and $x1024 $x77)))
 (=> $x1029 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 52) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 53) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1043 (= ?x60 52)))
 (let (($x1048 (and $x1043 $x77)))
 (=> $x1048 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 53) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 54) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1062 (= ?x60 53)))
 (let (($x1067 (and $x1062 $x77)))
 (=> $x1067 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 54) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 55) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1081 (= ?x60 54)))
 (let (($x1086 (and $x1081 $x77)))
 (=> $x1086 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 55) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 56) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1100 (= ?x60 55)))
 (let (($x1105 (and $x1100 $x77)))
 (=> $x1105 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 56) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 57) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1119 (= ?x60 56)))
 (let (($x1124 (and $x1119 $x77)))
 (=> $x1124 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 57) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 58) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1138 (= ?x60 57)))
 (let (($x1143 (and $x1138 $x77)))
 (=> $x1143 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 58) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 59) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1157 (= ?x60 58)))
 (let (($x1162 (and $x1157 $x77)))
 (=> $x1162 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 59) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 60) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1176 (= ?x60 59)))
 (let (($x1181 (and $x1176 $x77)))
 (=> $x1181 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 60) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 61) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1195 (= ?x60 60)))
 (let (($x1200 (and $x1195 $x77)))
 (=> $x1200 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 61) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 62) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1214 (= ?x60 61)))
 (let (($x1219 (and $x1214 $x77)))
 (=> $x1219 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 62) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 63) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1233 (= ?x60 62)))
 (let (($x1238 (and $x1233 $x77)))
 (=> $x1238 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 63) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 64) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1252 (= ?x60 63)))
 (let (($x1257 (and $x1252 $x77)))
 (=> $x1257 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 64) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 65) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1271 (= ?x60 64)))
 (let (($x1276 (and $x1271 $x77)))
 (=> $x1276 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 65) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 66) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1290 (= ?x60 65)))
 (let (($x1295 (and $x1290 $x77)))
 (=> $x1295 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 66) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 67) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1309 (= ?x60 66)))
 (let (($x1314 (and $x1309 $x77)))
 (=> $x1314 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 67) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 68) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1328 (= ?x60 67)))
 (let (($x1333 (and $x1328 $x77)))
 (=> $x1333 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 68) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 69) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1347 (= ?x60 68)))
 (let (($x1352 (and $x1347 $x77)))
 (=> $x1352 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 69) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 70) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1366 (= ?x60 69)))
 (let (($x1371 (and $x1366 $x77)))
 (=> $x1371 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 70) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 71) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1385 (= ?x60 70)))
 (let (($x1390 (and $x1385 $x77)))
 (=> $x1390 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 71) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 72) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1404 (= ?x60 71)))
 (let (($x1409 (and $x1404 $x77)))
 (=> $x1409 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 72) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 73) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1423 (= ?x60 72)))
 (let (($x1428 (and $x1423 $x77)))
 (=> $x1428 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 73) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 74) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1442 (= ?x60 73)))
 (let (($x1447 (and $x1442 $x77)))
 (=> $x1447 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 74) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 75) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1461 (= ?x60 74)))
 (let (($x1466 (and $x1461 $x77)))
 (=> $x1466 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 75) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 76) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1480 (= ?x60 75)))
 (let (($x1485 (and $x1480 $x77)))
 (=> $x1485 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 76) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 77) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1499 (= ?x60 76)))
 (let (($x1504 (and $x1499 $x77)))
 (=> $x1504 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 77) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 78) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1518 (= ?x60 77)))
 (let (($x1523 (and $x1518 $x77)))
 (=> $x1523 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 78) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 79) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1537 (= ?x60 78)))
 (let (($x1542 (and $x1537 $x77)))
 (=> $x1542 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 79) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 80) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1556 (= ?x60 79)))
 (let (($x1561 (and $x1556 $x77)))
 (=> $x1561 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 80) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 81) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1575 (= ?x60 80)))
 (let (($x1580 (and $x1575 $x77)))
 (=> $x1580 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 81) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 82) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1594 (= ?x60 81)))
 (let (($x1599 (and $x1594 $x77)))
 (=> $x1599 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 82) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 83) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1613 (= ?x60 82)))
 (let (($x1618 (and $x1613 $x77)))
 (=> $x1618 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 83) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 84) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1632 (= ?x60 83)))
 (let (($x1637 (and $x1632 $x77)))
 (=> $x1637 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 84) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 85) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1651 (= ?x60 84)))
 (let (($x1656 (and $x1651 $x77)))
 (=> $x1656 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 85) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 86) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1670 (= ?x60 85)))
 (let (($x1675 (and $x1670 $x77)))
 (=> $x1675 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 86) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 87) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1689 (= ?x60 86)))
 (let (($x1694 (and $x1689 $x77)))
 (=> $x1694 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 87) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 88) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1708 (= ?x60 87)))
 (let (($x1713 (and $x1708 $x77)))
 (=> $x1713 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 88) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 89) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1727 (= ?x60 88)))
 (let (($x1732 (and $x1727 $x77)))
 (=> $x1732 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 89) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 90) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1746 (= ?x60 89)))
 (let (($x1751 (and $x1746 $x77)))
 (=> $x1751 $x76))))))))))
 )
(assert
 (forall ((time Int) )(let (($x54 (= (var1_0 (+ time 1)) (+ (var1_0 time) 1))))
 (=> (and (= (time-to-state time) 90) (and (distinct (input-arg0 time) 0) true)) (and (= (time-to-state (+ time 1)) 91) $x54))))
 )
(assert
 (forall ((time Int) )(let ((?x52 (+ time 1)))
 (let ((?x55 (time-to-state ?x52)))
 (let (($x76 (= ?x55 2)))
 (let ((?x58 (input-arg0 time)))
 (let (($x77 (= ?x58 1)))
 (let ((?x60 (time-to-state time)))
 (let (($x1765 (= ?x60 90)))
 (let (($x1770 (and $x1765 $x77)))
 (=> $x1770 $x76))))))))))
 )
(assert
 (forall ((time Int) )(exists ((time Int) )(and (and (>= time 0) (< time 181)) (and (distinct (= (time-to-state time) 90) (= (input-arg0 time) 89)) true)))
 )
 )
(check-sat)
